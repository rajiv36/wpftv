<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
    xmlns:controls="clr-namespace:NDTV.SlateApp.Controls"
    mc:Ignorable="d"    
    xmlns:base="clr-namespace:NDTV.SlateApp"
    xmlns:local="clr-namespace:NDTV.SlateApp.View"
    xmlns:Custom="http://schemas.microsoft.com/surface/2008"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:Converter="clr-namespace:NDTV.SlateApp.Converter">
    <!-- Resource dictionary entries should be defined here. -->

    <!--Converter-->
    <Converter:ChartUrlConverter x:Key="ChartURLParser"></Converter:ChartUrlConverter>
    <Converter:TimeConverter x:Key="videoTimeSpan"/>

    <!--Font Family-->
    <FontFamily x:Key="DefaultFont">{DynamicResource Rockwell}</FontFamily>
    <FontFamily x:Key="Georgia">{DynamicResource Georgia}</FontFamily>
    <FontFamily x:Key="Segoe360Font">Segoe360</FontFamily>


    <!--Linear Gradient Brushes-->
    <LinearGradientBrush x:Key="ScorecardGradient" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF626262" Offset="0"/>
        <GradientStop Color="#FF333333" Offset="1"/>
        <GradientStop Color="#FF626262" Offset="0.285"/>
        <GradientStop Color="#FF414141" Offset="0.648"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CommentaryGradient" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF9C9E9E"/>
        <GradientStop Color="#FF9C9E9E" Offset="1"/>
        <GradientStop Color="#FFCACBCB" Offset="0.492"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="BlueGradient" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF566E88" Offset="0"/>
        <GradientStop Color="#FF263E58" Offset="1"/>
        <GradientStop Color="#FF536B85" Offset="0.292"/>
        <GradientStop Color="#FF29415B" Offset="0.678"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="GrayGradient" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA7A7A7" Offset="0"/>
        <GradientStop Color="#FF777777" Offset="1"/>
        <GradientStop Color="#FFA5A5A5" Offset="0.318"/>
        <GradientStop Color="#FF7B7B7B" Offset="0.572"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TopHeaderBackgroundColor" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF363636" Offset="0"/>
        <GradientStop Color="#FF161616" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="LatestNewsBackgroundColor" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF868686" Offset="0"/>
        <GradientStop Color="#FFECECEC" Offset="1"/>
        <GradientStop Color="#FFDBDBDB" Offset="0.8"/>
        <GradientStop Color="#FFABABAB" Offset="0.279"/>
        <GradientStop Color="#FFCACACA" Offset="0.558"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TopHeaderButtonBorderColor" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF6A6A6A" Offset="0"/>
        <GradientStop Color="#FF3F3F3F" Offset="1"/>
        <GradientStop Color="#FF4E4E4E" Offset="0.13"/>
        <GradientStop Color="#FF4E4E4E" Offset="0.9"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MouseOverTopHeaderButtonBorderColor" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF6A6A6A" Offset="0"/>
        <GradientStop Color="#FF353535" Offset="1"/>
        <GradientStop Color="#FF565656" Offset="0.13"/>
        <GradientStop Color="#FF565656" Offset="0.9"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TopHeaderButtonBackgroundColor" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF0C0C0C" Offset="1"/>
        <GradientStop Color="#FF414141"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MouseOverTopHeaderButtonBackgroundColor" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF373737" Offset="1"/>
        <GradientStop Color="#FF2B2B2B" Offset="0.241"/>
        <GradientStop Color="#FF040404"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalScrollBarBackgroundColor" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#E1E1E1" Offset="0"/>
        <GradientStop Color="#EDEDED" Offset="0.20"/>
        <GradientStop Color="#EDEDED" Offset="0.80"/>
        <GradientStop Color="#E3E3E3" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalScrollBarBackgroundColor" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="#E1E1E1" Offset="0"/>
        <GradientStop Color="#EDEDED" Offset="0.20"/>
        <GradientStop Color="#EDEDED" Offset="0.80"/>
        <GradientStop Color="#E3E3E3" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="LiveTVBackgroundColor" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFE9E9E9" Offset="0"/>
        <GradientStop Color="#FFD5D5D5" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="AlternateNormalButtonBackgroundColor" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#454545" Offset="0"/>
        <GradientStop Color="#454545" Offset="0.5"/>
        <GradientStop Color="#454545" Offset="0.5"/>
        <GradientStop Color="#454545" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="SelectedTabItemBackgroundColor" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#e4e3e8" Offset="0.15"/>
        <GradientStop Color="#eeeef0" Offset=".5"/>
        <GradientStop Color="#eeeef0" Offset=".5"/>
        <GradientStop Color="#e4e3e8" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="LayoutRootBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFD6D6D6" Offset="0"/>
        <GradientStop Color="White" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HeaderBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF3F3F3F" Offset="0"/>
        <GradientStop Color="Black" Offset="1"/>
        <GradientStop Color="#FF444444" Offset="0.443"/>
        <GradientStop Color="#FF2A2A2A" Offset="0.62"/>
    </LinearGradientBrush>

    <!--Solid Color Brushes-->
    <SolidColorBrush x:Key="LiveTVBorderBrush" Color="#FFC7C6CB"/>
    <SolidColorBrush x:Key="ScrollBarDisabledBackgroundBrush" Color="#F4F4F4"/>
    <SolidColorBrush x:Key="NormalButtonBorderBrush" Color="#FF707070"/>
    <SolidColorBrush x:Key="CheckBoxStrokeBrush" Color="#8E8F8F"/>
    <SolidColorBrush x:Key="HighlightRedBrush" Color="#FFCF181A"/>
    <SolidColorBrush x:Key="WhiteBrush" Color="#FFE9E9E9"/>
    <SolidColorBrush x:Key="HighlightYellowBrush" Color="#FFE9B404"/>
    <SolidColorBrush x:Key="GrayFontBrush" Color="#FF878787"/>
    <SolidColorBrush x:Key="HighlightGreenBrush" Color="#FF82D406"/>
    <SolidColorBrush x:Key="HighlightBlueBrush" Color="#FF2BC3F4"/>
    <SolidColorBrush x:Key="HighlightMaroonBrush" Color="#FFBE1D23"/>
    <SolidColorBrush x:Key="BlackFontBrush" Color="#FF3B3B3B"/>
    <SolidColorBrush x:Key="GrayBrush" Color="#FFDEDEDE"/>
    <SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#8C8E94"/>
    <SolidColorBrush x:Key="TabItemSelectedBackgroundBrush" Color="#F9F9F9"/>
    <SolidColorBrush x:Key="TabItemHotBorderBrush" Color="#3C7FB1"/>
    <SolidColorBrush x:Key="TabItemDisabledBackgroundBrush" Color="#F4F4F4"/>
    <SolidColorBrush x:Key="TabItemDisabledBorderBrush" Color="#FFC9C7BA"/>
    <SolidColorBrush x:Key="DarkGrayBrush" Color="#FF4E4E4E"/>
    <SolidColorBrush x:Key="DarkBlueBrush" Color="#FF345696"/>
    <SolidColorBrush x:Key="GrayForegroundBrush" Color="#FF6A6A6A"/>
    <SolidColorBrush x:Key="LightGrayBrush" Color="Gainsboro"/>
    <SolidColorBrush x:Key="GreenBrush" Color="#FF42AE37"/>
    <SolidColorBrush x:Key="OrangeFroegroundBrush" Color="#FFe95233"/>
    <SolidColorBrush x:Key="LightGrayFroegroundBrush" Color="#FFfeffff"/>

    <!--Control Templates-->
    <ControlTemplate x:Key="PlayPauseToggleButtonBlackControlTemplate" TargetType="{x:Type ToggleButton}">
        <Grid Width="20" Height="20">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver"/>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image1">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked"/>
                    <VisualState x:Name="Indeterminate"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Ellipse x:Name="ellipse" Stroke="Black" StrokeThickness="0" Opacity="0" Margin="-2">
                <Ellipse.Fill>
                    <RadialGradientBrush>
                        <GradientStop Color="#7FA9A9A9" Offset="0"/>
                        <GradientStop Offset="1"/>
                    </RadialGradientBrush>
                </Ellipse.Fill>
            </Ellipse>
            <Image x:Name="image1" Source="../Images/PlayBlack.png" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" Width="10" Height="12" Margin="3,0,0,0"/>
            <Image x:Name="image" Source="../Images/PauseBlack.png" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" Width="10" Height="12" Margin="0" Opacity="0"/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="PlayPauseToggleButtonControlTemplate" TargetType="{x:Type ToggleButton}">
        <Grid Width="20" Height="20">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver"/>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image1">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked"/>
                    <VisualState x:Name="Indeterminate"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Ellipse x:Name="ellipse" Stroke="Black" StrokeThickness="0" Opacity="0" Margin="-2">
                <Ellipse.Fill>
                    <RadialGradientBrush>
                        <GradientStop Color="#7FA9A9A9" Offset="0"/>
                        <GradientStop Offset="1"/>
                    </RadialGradientBrush>
                </Ellipse.Fill>
            </Ellipse>
            <Image x:Name="image1" Source="../Images/photo_playbtn.png" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" Width="10" Height="12" Margin="3,0,0,0"/>
            <Image x:Name="image" Source="../Images/photo_stopbtn.png" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" Width="10" Height="12" Margin="0" Opacity="0"/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="WindowTemplateKeyControlTemplate" TargetType="{x:Type Window}">
        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
            <Grid>
                <AdornerDecorator>
                    <ContentPresenter/>
                </AdornerDecorator>
                <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                    <Condition Property="WindowState" Value="Normal"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Data Templates-->
    <!--<DataTemplate x:Key="VideoGalleryDataTemplate">
        <Grid Width="165" Margin="0,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="95"/>
                <RowDefinition Height="35"/>
            </Grid.RowDefinitions>
            <Image Margin="0,0,20,0" Source="{Binding ThumbnailLink}" Grid.Row="0" Style="{DynamicResource GalleryImg}" VerticalAlignment="Bottom" 
                       Grid.RowSpan="1" Width="145" Height="95" Stretch="UniformToFill"   />
            <Border  Width="145" Margin="0,0,20,0" Background="#BB4E4848" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" >
                <Grid Height="20">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="110"/>
                    </Grid.ColumnDefinitions>
                    
                    <TextBlock Foreground="White" Grid.Column="1" Text="{Binding Path=Duration,Converter={StaticResource videoTimeSpan}}" Padding="3" HorizontalAlignment="Right" FontSize="9" VerticalAlignment="Center" />
                </Grid>
            </Border>
            <TextBlock Margin="0,5,20,0"  Text="{Binding Description}" Grid.Row="1" Style="{DynamicResource GalleryTxt}" HorizontalAlignment="Stretch" Width="Auto" Height="Auto" VerticalAlignment="Top" TextTrimming="CharacterEllipsis"  Foreground="#FFCCCCCC" />
        </Grid>
    </DataTemplate>-->
    <DataTemplate x:Key="VideoGalleryDataTemplate">
        <Grid Width="140"  >
            <Grid.RowDefinitions>
                <RowDefinition Height="95"/>
                <RowDefinition Height="45"/>
            </Grid.RowDefinitions>
            <Border Style="{DynamicResource ThumbnailBorderStyle}"  Width="130" Height="95" HorizontalAlignment="Left">
                <Grid>
                    <Image Source="{Binding ThumbnailLink}"  Stretch="Fill" />
                    <Border Background="#BB4E4848" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" >
                        <Grid Height="20">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Image Margin="3,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" Height="16" Width="16" Stretch="Uniform" 
                                                 Source="../Images/video_icon.png" />
                            <TextBlock  Foreground="White" Grid.Column="1" Text="{Binding Path=Duration,Converter={StaticResource videoTimeSpan}}" Padding="3" HorizontalAlignment="Right" FontSize="9" VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                </Grid>
            </Border>

            <TextBlock Text="{Binding Description}" Grid.Row="1" Style="{DynamicResource GalleryTextStyle}" HorizontalAlignment="Stretch" Width="Auto" Height="Auto" VerticalAlignment="Top" TextTrimming="CharacterEllipsis" Margin="0,5,0,0" Foreground="#FFCCCCCC" >
            </TextBlock>
        </Grid>
        <!--<Grid  >
            <Grid.RowDefinitions>
                <RowDefinition Height="95"/>
                <RowDefinition Height="35"/>
            </Grid.RowDefinitions>
            <Border Style="{DynamicResource ThumbnailBorderStyle}" Height="95" Width="127" HorizontalAlignment="Left">
                <Image Source="{Binding ThumbnailLink}" Grid.Row="0" Style="{DynamicResource GalleryImageStyle}"   Stretch="Fill" />
            </Border>
            <Border  Background="#BB4E4848" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" >
                <Grid Height="20">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    
                    <TextBlock Foreground="White" Grid.Column="1" Text="{Binding Path=Duration,Converter={StaticResource videoTimeSpan}}" Padding="3" HorizontalAlignment="Right" FontSize="9" VerticalAlignment="Center" />
                </Grid>
            </Border>
            <TextBlock Text="{Binding Description}" Grid.Row="1" Style="{DynamicResource GalleryTextStyle}" HorizontalAlignment="Stretch" Width="Auto" Height="Auto" VerticalAlignment="Top" TextTrimming="CharacterEllipsis" Margin="0,5,0,0" Foreground="#FFCCCCCC" >
            </TextBlock>
        </Grid>-->
    </DataTemplate>
    <DataTemplate x:Key="GalleryGridViewDataTemplate">
        <Grid  >
            <Border Style="{DynamicResource BigThumbnailBorderStyle}">
                <Grid Background="Black" >
                    <TextBlock Text="Loading" Foreground="#FFf7f7f7" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="8"/>
                    <Image Source="{Binding ImageThumbnailLink}" Stretch="UniformToFill" />
                </Grid>
            </Border>
        </Grid>
    </DataTemplate>


    <DataTemplate x:Key="GalleryAlbumsDataTemplate">
        <Grid Width="90"  >
            <Grid.RowDefinitions>
                <RowDefinition Height="70"/>
                <RowDefinition Height="45"/>
            </Grid.RowDefinitions>
            <Border Style="{DynamicResource ThumbnailBorderStyle}">
                <Grid>
                    <TextBlock Text="Loading" Foreground="#FFf7f7f7" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="8" Grid.Row="0"/>
                    <Image Source="{Binding ThumbnailLink}" Grid.Row="0"   Stretch="Fill" />
                    <Border Background="#BB4E4848" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" >
                        <Grid Height="20">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Image Height="9" Width="18" Stretch="Uniform" Source="/Resources/Images/photo_icon.png"></Image>
                            <TextBlock Grid.Column="1" Foreground="White" HorizontalAlignment="Left" FontSize="9" VerticalAlignment="Center" Margin="-3,0,0,0">
                                        <Run Text="{Binding Path=TotalImagesInAlbum}"/>
                            </TextBlock>
                        </Grid>
                    </Border>
                </Grid>
            </Border>
            <TextBlock Text="{Binding AlbumTitle}" Grid.Row="1" Style="{DynamicResource GalleryTextStyle}" HorizontalAlignment="Stretch" Width="Auto" Height="Auto" VerticalAlignment="Top" TextTrimming="CharacterEllipsis" Margin="5,5,0,0" Foreground="#FFCCCCCC" >
            </TextBlock>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="GalleryAlbumImagesDataTemplate">
        <Border SnapsToDevicePixels="True"  Width="30" Height="30" BorderThickness="1" BorderBrush="#FF444444" >
            <Image Source="{Binding ImageThumbnailLink}" Stretch="UniformToFill" />
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="CommentaryDataTemplate">
        <Grid Background="{DynamicResource CommentaryGradient}" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="66"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="1"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="1"/>
            </Grid.RowDefinitions>
            <Grid  Grid.Row="1" Background="#e5e6e6" >
                <TextBlock TextWrapping="Wrap" Text="{Binding OverNumber}" Style="{DynamicResource RedCommentaryTextStyle}"/>
            </Grid>
            <TextBlock Text="{Binding DisplayedCommentary}" Grid.Column="1" Grid.Row="1" Style="{DynamicResource GrayCommentaryTextStyle}" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="StockDetailsDataTemplate">
        <Grid x:Name="LayoutRoot">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" ></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <TextBlock Text="Loading..." HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="8"/>
            <Image x:Name="GraphImage" Source="{Binding GraphLink}" Width="138" Height="72" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center"></Image>
            <!--<controls:PreloadImageControl x:Name="StockGraphPlaceHolder" Height="72" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" DefaultImageSource="../Images/Busy_Image.PNG" DefaultImageStretch="UniformToFill" ImageSource="{Binding GraphLink}"></controls:PreloadImageControl>-->
            <StackPanel Orientation="Vertical" Grid.Column="1" Margin="5,0,0,0" VerticalAlignment="Top">
                <!--<TextBlock Text="BSE Spice" FontWeight="Bold" Foreground="{DynamicResource DarkGrayBrush}" FontSize="13.333"></TextBlock>-->
                <StackPanel Orientation="Horizontal" >
                    <TextBlock Text="Code - " Foreground="{DynamicResource DarkBlueBrush}" Style="{DynamicResource DataTextBlockStyle}"></TextBlock>
                    <TextBlock Text="{Binding Code}"  Style="{DynamicResource DataTextBlockStyle}" ></TextBlock>
                </StackPanel>
                <StackPanel Orientation="Horizontal" >
                    <TextBlock Text="High - " Foreground="{DynamicResource DarkBlueBrush}" Style="{DynamicResource DataTextBlockStyle}"></TextBlock>
                    <TextBlock Text="{Binding HighPrice}" Style="{DynamicResource DataTextBlockStyle}"></TextBlock>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Low - " Foreground="{DynamicResource DarkBlueBrush}" Style="{DynamicResource DataTextBlockStyle}"></TextBlock>
                    <TextBlock Text="{Binding LowPrice}" Style="{DynamicResource DataTextBlockStyle}"></TextBlock>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Previous Close - " Foreground="{DynamicResource DarkBlueBrush}" Style="{DynamicResource DataTextBlockStyle}"></TextBlock>
                    <TextBlock Text="{Binding PreviousClose}" Style="{DynamicResource DataTextBlockStyle}"></TextBlock>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="52 Week High - " Foreground="{DynamicResource DarkBlueBrush}" Style="{DynamicResource DataTextBlockStyle}"></TextBlock>
                    <TextBlock Text="{Binding YearHigh}" Style="{DynamicResource DataTextBlockStyle}"></TextBlock>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="52 Week Low - " Foreground="{DynamicResource DarkBlueBrush}" Style="{DynamicResource DataTextBlockStyle}"></TextBlock>
                    <TextBlock Text="{Binding YearLow}" Style="{DynamicResource DataTextBlockStyle}"></TextBlock>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Traded Volume - " Foreground="{DynamicResource DarkBlueBrush}" Style="{DynamicResource DataTextBlockStyle}"></TextBlock>
                    <TextBlock Text="{Binding Volume}" Style="{DynamicResource DataTextBlockStyle}"></TextBlock>
                </StackPanel>
            </StackPanel>
            <StackPanel Grid.Row="1" Grid.ColumnSpan="2" HorizontalAlignment="Left" >
                <StackPanel Orientation="Horizontal">
                    <TextBlock FontSize="16" FontWeight="Bold"  Text="{Binding CurrentStockValue}" Foreground="{DynamicResource DarkGrayBrush}" VerticalAlignment="Bottom"></TextBlock>
                    <Image x:Name="StockChangeIndicator" Height="24" Width="24" Margin="3,0,0,3"></Image>
                    <TextBlock x:Name="StockChangeTextBlock" FontSize="13.333" FontWeight="Bold" Foreground="{DynamicResource GreenBrush}" VerticalAlignment="Bottom" Margin="3,0,0,0">
                            <Run Text="{Binding Path=Change}"></Run>
                            <Run Text="("></Run>
                            <Run Text="{Binding Path=PriceDifference}"></Run>
                            <Run Text="%)"></Run>
                    </TextBlock>
                </StackPanel>
                <TextBlock FontSize="10" FontWeight="SemiBold" Text="{Binding Time}" Foreground="{DynamicResource GrayForegroundBrush}"></TextBlock>
            </StackPanel>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=Tag,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ContentControl}}}" Value="Potrait">
                <Setter Property="Width" Value="100" TargetName="GraphImage"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=StockDirection}" Value="Up">
                <Setter TargetName="StockChangeTextBlock" Property="Foreground" Value="{DynamicResource GreenBrush}"></Setter>
                <Setter TargetName="StockChangeIndicator" Property="Source" Value="../Images/StockIndexUp.png"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=StockDirection}" Value="Down">
                <Setter TargetName="StockChangeTextBlock" Property="Foreground" Value="{DynamicResource HighlightRedBrush}"></Setter>
                <Setter TargetName="StockChangeIndicator" Property="Source" Value="../Images/StockIndexDown.png"></Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="ActiveCategoriesPanelTemplate">
        <RadioButton Content="{Binding}" Style="{DynamicResource RadioButtonStyleSensex}" VerticalAlignment="Center" Margin="0" GroupName="ActiveCategories" />
    </DataTemplate>
    <DataTemplate x:Key="StockSummaryDataTemplate">
        <StackPanel Orientation="Horizontal">
            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding Exchange}" VerticalAlignment="Center" FontWeight="Bold" Foreground="#FF0083B4" Margin="0,0,5,0" FontSize="10.667"/>
            <TextBlock TextWrapping="Wrap" Text="{Binding CurrentStockValue}" VerticalAlignment="Center" Foreground="{DynamicResource NormalButtonBorderBrush}" FontSize="10.667" FontWeight="Bold" Margin="0,0,5,0"/>
            <TextBlock x:Name="ChangeTextBlock" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="{DynamicResource HighlightRedBrush}" FontSize="10.667" FontWeight="Bold" Margin="0,0,5,0">
                    <Run Text="("></Run>
                    <Run Text="{Binding PriceChange}"></Run>
                    <Run Text=")"></Run>
            </TextBlock>
        </StackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=StockDirection}" Value="Down">
                <Setter TargetName="ChangeTextBlock" Property="Foreground" Value="{DynamicResource HighlightRedBrush}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=StockDirection}" Value="Up">
                <Setter TargetName="ChangeTextBlock" Property="Foreground" Value="{DynamicResource GreenBrush}"></Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="ImageTemplate">
        <Image HorizontalAlignment="Left" Height="32" Width="32" Stretch="Uniform" Source="{Binding Path=Chart, Converter={StaticResource ChartURLParser}}"></Image>
    </DataTemplate>
    <DataTemplate x:Key="HighPriceBlockTemplate">
        <TextBlock x:Name="High" Text="{Binding HighPrice}"  TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,10,0" FontFamily="{DynamicResource Segoe360Font}" FontWeight="Bold" FontSize="10.667" Foreground="{DynamicResource BlackFontBrush}"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="LowPriceBlockTemplate">
        <TextBlock x:Name="Low" Text="{Binding LowPrice}"  TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,10,0" FontFamily="{DynamicResource Segoe360Font}" FontWeight="Bold" FontSize="10.667" Foreground="{DynamicResource BlackFontBrush}"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="StocksBlockTemplate">
        <TextBlock x:Name="Stocks" Text="{Binding Name}"  TextWrapping="Wrap"  VerticalAlignment="Center" Foreground="#FF2C5E83" FontWeight="Bold"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="PriceBlockTemplate">
        <TextBlock x:Name="Price" Text="{Binding LastTradedPrice}" TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,10,0" FontFamily="{DynamicResource Segoe360Font}" FontWeight="Bold" FontSize="10.667" Foreground="{DynamicResource BlackFontBrush}"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="ChangeBlockTemplate">
        <StackPanel Orientation="Horizontal">
            <TextBlock x:Name="StockChangeTextBlock" TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,10,0" FontFamily="{DynamicResource Segoe360Font}" FontWeight="Bold" FontSize="10.667">
                        <Run Text="{Binding Path=Change}"></Run>
                        <Run Text="("></Run>
                        <Run Text="{Binding Path=PriceDifference}"></Run>
                        <Run Text="%)"></Run>
            </TextBlock>
        </StackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=StockDirection}" Value="Up">
                <Setter TargetName="StockChangeTextBlock" Property="Foreground" Value="{DynamicResource GreenBrush}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=StockDirection}" Value="Down">
                <Setter TargetName="StockChangeTextBlock" Property="Foreground" Value="{DynamicResource HighlightRedBrush}"></Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="CategoryChoserItemsTemplate">
        <RadioButton Content="{Binding}"></RadioButton>
    </DataTemplate>

    <DataTemplate x:Key="VolumeBlockTemplate">
        <TextBlock x:Name="Volume" Text="{Binding TotalTradedQuantity}" TextWrapping="Wrap" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0" FontFamily="{DynamicResource Segoe360Font}" FontWeight="Bold" FontSize="10.667" Foreground="{DynamicResource BlackFontBrush}"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="StockMarketItemsItemTemplate">
        <ContentControl Content="{Binding Path=.}" ContentTemplate="{StaticResource StockSummaryDataTemplate}"></ContentControl>
    </DataTemplate>

    <!--Items Panel Templates-->
    <ItemsPanelTemplate x:Key="VideoGalleryItemsPanel">
        <VirtualizingStackPanel Orientation="Horizontal" IsItemsHost="True" />
    </ItemsPanelTemplate>
    <ItemsPanelTemplate x:Key="ImageGalleryWrapItemsPanel">
        <WrapPanel/>
    </ItemsPanelTemplate>
    <ItemsPanelTemplate x:Key="GalleryItemsPanel">
        <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal"/>
    </ItemsPanelTemplate>
    <ItemsPanelTemplate x:Key="ImageGalleryStackItemsPanel">
        <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal"/>
    </ItemsPanelTemplate>
    <ItemsPanelTemplate x:Key="StockItemsListItemsPanelTemplate">
        <VirtualizingStackPanel Orientation="Vertical"/>
    </ItemsPanelTemplate>
    <ItemsPanelTemplate x:Key="CategoryChoserItemsPanel">
        <VirtualizingStackPanel Orientation="Horizontal"></VirtualizingStackPanel>
    </ItemsPanelTemplate>
    <ItemsPanelTemplate x:Key="StockMarketItemsPanel">
        <VirtualizingStackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="10,5"></VirtualizingStackPanel>
    </ItemsPanelTemplate>

    <!--Styles-->

    <Style x:Key="GalleryTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="FontFamily" Value="{DynamicResource Rockwell}" />
        <Setter Property="FontSize" Value="9px" />
        <Setter Property="Foreground" Value="#b8b9bb" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="RelatedNewsImageStyle" TargetType="{x:Type Image}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="Width" Value="83"/>
        <Setter Property="Height" Value="78"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    <Style x:Key="RelatedNewsTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="FontFamily" Value="{DynamicResource Georgia}" />
        <Setter Property="FontSize" Value="11px" />
        <Setter Property="Foreground" Value="#050505" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style x:Key="RelatedVideosImageStyle" TargetType="{x:Type Image}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="Width" Value="85"/>
        <Setter Property="Height" Value="70"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    <Style x:Key="ScoreRedTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}" />
        <Setter Property="FontSize" Value="16px" />
        <Setter Property="Foreground" Value="#c40f13" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="VideoHeadTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="FontFamily" Value="{DynamicResource Rockwell}" />
        <Setter Property="FontSize" Value="18px" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style x:Key="VideoTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="FontFamily" Value="{DynamicResource Rockwell}" />
        <Setter Property="FontSize" Value="14px" />
        <Setter Property="Foreground" Value="#b8b9bb" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style x:Key="TitleHeadTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="FontFamily" Value="{DynamicResource Rockwell}" />
        <Setter Property="FontSize" Value="18px" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#000000" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style x:Key="TitleTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="FontFamily" Value="{DynamicResource Rockwell}" />
        <Setter Property="FontSize" Value="14px" />
        <Setter Property="Foreground" Value="#000000" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style x:Key="GrayNewsTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="10px" />
        <Setter Property="Foreground" Value="#6a6a6a" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style x:Key="RedNewsTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="10px" />
        <Setter Property="Foreground" Value="#9a050b" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style x:Key="NewsHeadTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="FontFamily" Value="{DynamicResource Rockwell}" />
        <Setter Property="FontSize" Value="14px" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#000000" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style x:Key="RedWeatherTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}" />
        <Setter Property="FontSize" Value="16px" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#fd4021" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style x:Key="BlackWeatherTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}" />
        <Setter Property="FontSize" Value="16px" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#000000" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style x:Key="GrayWeatherTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}" />
        <Setter Property="FontSize" Value="12px" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#383838" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style x:Key="GrayWeatherDegreeTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}" />
        <Setter Property="FontSize" Value="8px" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#383838" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style x:Key="WeatherMainTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}" />
        <Setter Property="FontSize" Value="34px" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="#8d8d8d" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style x:Key="WeatherMainDegreeTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}" />
        <Setter Property="FontSize" Value="17px" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="#8d8d8d" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style x:Key="BlueWeatherTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}" />
        <Setter Property="FontSize" Value="16px" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#007fca" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style x:Key="GrayWeatherBodyTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}" />
        <Setter Property="FontSize" Value="10px" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="#383838" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style x:Key="WeatherGrayBodyDegreeTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}" />
        <Setter Property="FontSize" Value="6px" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="#383838" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style x:Key="WhiteHeadTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}" />
        <Setter Property="FontSize" Value="14px" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style x:Key="WhiteBodyTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
    </Style>
    <Style x:Key="WhiteBodyRightAlignedTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="2,2,5,0" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
    </Style>
    <Style x:Key="RedCommentaryTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}" />
        <Setter Property="FontSize" Value="14px" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#c40f13" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="GrayCommentaryTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="FontSize" Value="12px" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="#383838" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Width" Value="375" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="DataTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Foreground" Value="{DynamicResource GrayForegroundBrush}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>
    <Style x:Key="ScorecardHeaderStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#FFE5E5E5"></Setter>
        <Setter Property="TextWrapping" Value="Wrap"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}"></Setter>
        <Setter Property="FontSize" Value="32"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="Margin" Value="20,0,0,0"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
    </Style>
    <Style x:Key="NewsFlashTextBlockStyle" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="TextWrapping" Value="Wrap"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Margin" Value="10,0,25,0"></Setter>
    </Style>
    <Style x:Key="ResultsTodayTextBlockStyle" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="TextWrapping" Value="Wrap"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="Foreground" Value="#FF0083B4"></Setter>
    </Style>
    <Style x:Key="DataGridHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
    </Style>
    <Style x:Key="NewsFlashPathStyle" TargetType="Path">
        <Setter Property="Data" Value="M0,0 L74.99148,1.3763623E-15 84,9.3738007 74.872065,19 0,19 z"></Setter>
        <Setter Property="Margin" Value="0,0,5,0"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Height" Value="23"></Setter>
        <Setter Property="Stretch" Value="Fill"></Setter>
        <Setter Property="Fill">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.923,0.5" StartPoint="-0.004,0.453">
                    <GradientStop Color="#FFAF0000"/>
                    <GradientStop Color="#FFDC0000" Offset="1"/>
                    <GradientStop Color="#FFDC0000" Offset="0.099"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TabItemFocusStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="3,3,3,1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SensexColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Border >
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="#FF464646" Offset="0"/>
                                    <GradientStop Color="#FF454545" Offset="0.5"/>
                                    <GradientStop Color="#FF454545" Offset="0.5"/>
                                    <GradientStop Color="#FF151515" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,0"/>
                        </Border>
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}" Visibility="Collapsed"/>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}" Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SensexGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Normal_AlternatingRow"/>
                                <VisualState x:Name="Unfocused_Editing"/>
                                <VisualState x:Name="Normal_Editing"/>
                                <VisualState x:Name="Unfocused_Selected"/>
                                <VisualState x:Name="Normal_Selected"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="MouseOver_Unfocused_Editing"/>
                                <VisualState x:Name="MouseOver_Editing"/>
                                <VisualState x:Name="MouseOver_Unfocused_Selected"/>
                                <VisualState x:Name="MouseOver_Selected"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                            <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SensexDataGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Grid >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Normal_AlternatingRow"/>
                                <VisualState x:Name="Unfocused_Editing"/>
                                <VisualState x:Name="Normal_Editing"/>
                                <VisualState x:Name="Unfocused_Selected"/>
                                <VisualState x:Name="Normal_Selected">
                                    <!--<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="selectedStyle">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>-->
                                </VisualState>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="MouseOver_Unfocused_Editing"/>
                                <VisualState x:Name="MouseOver_Editing"/>
                                <VisualState x:Name="MouseOver_Unfocused_Selected"/>
                                <VisualState x:Name="MouseOver_Selected">
                                    <!--<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="selectedStyle">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>-->
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle>
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFE9EBEA" Offset="0"/>
                                    <GradientStop Color="#FFD5D4DA" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="selectedStyle" Visibility="Collapsed">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFDDF5FF" Offset="0"/>
                                    <GradientStop Color="#FFC5F3FF" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Border x:Name="DGR_Border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" BorderBrush="{DynamicResource CheckBoxStrokeBrush}">

                            <SelectiveScrollingGrid Background="Transparent">
                                <SelectiveScrollingGrid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </SelectiveScrollingGrid.ColumnDefinitions>
                                <SelectiveScrollingGrid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </SelectiveScrollingGrid.RowDefinitions>
                                <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Opacity="1" Style="{DynamicResource DataGridCellsPresenterStyle}" VerticalAlignment="Center"/>
                                <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                                <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                            </SelectiveScrollingGrid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Setter Property="Visibility" TargetName="selectedStyle" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True"></Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DataGridCellsPresenterStyle" TargetType="{x:Type DataGridCellsPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCellsPresenter}">
                    <ItemsPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HeaderedContentControlStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <StackPanel>
                        <Rectangle Fill="{DynamicResource LightGrayBrush}" Stroke="{x:Null}" VerticalAlignment="Top"/>
                        <ContentPresenter ContentSource="Header" TextBlock.Foreground="#FF4586ac" TextBlock.FontWeight="Bold" TextBlock.FontSize="13" Margin="0,5,0,0"/>
                        <ContentPresenter/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="UniformTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusStyle}"/>
        <Setter Property="Foreground" Value="#2d2c2c"/>
        <Setter Property="Padding" Value="6,1,6,1"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid SnapsToDevicePixels="true">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="Content" ContentSource="Header" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource SelectedTabItemBackgroundColor}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" Value="#fd4021"/>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Background" TargetName="Bd" Value="#000000"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemHotBorderBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Top"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-2,-2,-1"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-1,-2,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-2,-1,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-1,-2,-2,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemDisabledBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemDisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Image Source="Resources\Images\close.png"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AlternateTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusStyle}"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Padding" Value="6,1,6,1"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource AlternateNormalButtonBackgroundColor}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid SnapsToDevicePixels="true">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="Content" ContentSource="Header" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource SelectedTabItemBackgroundColor}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" Value="#fd4021"/>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Background" TargetName="Bd" Value="#000000"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemHotBorderBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Top"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-2,-2,-1"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-1,-2,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-2,-1,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-1,-2,-2,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="#454545"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemDisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="#FFFFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MailButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="Image/mail_16x16.png" Width="16" Height="16"/>
                        <ContentPresenter Margin="5,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}"/>
    </Style>
    <Style x:Key="TwitterButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="Image/tweet_16x16.png" Width="16" Height="16"/>
                        <ContentPresenter Margin="5,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}"/>
    </Style>
    <Style x:Key="FacebookButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="Image/facebook_16x16.png" Width="16" Height="16"/>
                        <ContentPresenter Margin="5,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}"/>
    </Style>
    <Style x:Key="LinkedInButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="Image/linkedin_16x16.png" Width="16" Height="16"/>
                        <ContentPresenter Margin="5,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}"/>
    </Style>
    <Style x:Key="CommentsButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal">
                        <ContentPresenter Margin="5,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        <TextBlock Text="5" Foreground="#b13e3e" FontSize="9" Margin="2,-3,0,0" VerticalAlignment="Center" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}"/>
    </Style>
    <Style x:Key="GrayCloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Image Source="Image\close_grey.png"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PreviousButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="path">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FF383A3D"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="path">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FF505356"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="path" Data="M124.90726,85.069727 C124.90726,85.069727 130.16386,84.931127 130.16386,89.910819 L130.16386,110.6617 C130.16386,110.6617 130.02513,114.6733 126.01403,114.81164 L90.73518,114.73389 C90.73518,114.73389 88.115716,114.67285 86.317622,112.59782 L73.592195,100.00929 86.841576,86.690213 C86.841576,86.690213 88.684324,85.060613 91.849754,85.207398 z" Stretch="Fill" Stroke="#FF6A6B6B">
                            <Path.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF797C80" Offset="0"/>
                                    <GradientStop Color="#FF5E6165" Offset="1"/>
                                    <GradientStop Color="#FF777A7E" Offset="0.49"/>
                                    <GradientStop Color="#FF5F6266" Offset="0.51"/>
                                </LinearGradientBrush>
                            </Path.Fill>
                        </Path>
                        <ContentPresenter HorizontalAlignment="Stretch" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" d:LayoutOverrides="Width" Margin="19.022,0,11.658,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}"/>
        <Setter Property="FontSize" Value="13.333"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style x:Key="NextButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="path">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FF383A3D"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="path">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FF505356"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="path" Data="M124.90726,85.069727 C124.90726,85.069727 130.16386,84.931127 130.16386,89.910819 L130.16386,110.6617 C130.16386,110.6617 130.02513,114.6733 126.01403,114.81164 L90.73518,114.73389 C90.73518,114.73389 88.115716,114.67285 86.317622,112.59782 L73.592195,100.00929 86.841576,86.690213 C86.841576,86.690213 88.684324,85.060613 91.849754,85.207398 z" Stretch="Fill" Stroke="#FF6A6B6B" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="1" ScaleX="-1"/>
                                    <SkewTransform AngleY="0" AngleX="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Path.RenderTransform>
                            <Path.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF797C80" Offset="0"/>
                                    <GradientStop Color="#FF5E6165" Offset="1"/>
                                    <GradientStop Color="#FF777A7E" Offset="0.49"/>
                                    <GradientStop Color="#FF5F6266" Offset="0.51"/>
                                </LinearGradientBrush>
                            </Path.Fill>
                        </Path>
                        <ContentPresenter HorizontalAlignment="Stretch" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" d:LayoutOverrides="Width" Margin="11.677,0,18.987,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}"/>
        <Setter Property="FontSize" Value="13.333"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style x:Key="SlateWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderThickness="0">
                        <StackPanel Orientation="Vertical">
                            <AdornerDecorator VerticalAlignment="Stretch" Height="Auto">
                                <ContentPresenter/>
                            </AdornerDecorator>
                            <StackPanel Height="36" Background="#FFE1E1E1" Orientation="Horizontal">
                                <Button Content="mail" Margin="30,5,7,7" Style="{DynamicResource MailButtonStyle}" Cursor="Hand"/>
                                <Button Content="tweet" Margin="15,5,7,7" Style="{DynamicResource TwitterButtonStyle}" Cursor="Hand"/>
                                <Button Content="Like" Margin="15,5,7,7" Style="{DynamicResource FacebookButtonStyle}" Cursor="Hand"/>
                                <Button Content="share" Margin="15,5,7,7" Style="{DynamicResource LinkedInButtonStyle}" Cursor="Hand"/>
                                <Button Content="comments" Margin="15,5,7,7" Style="{DynamicResource CommentsButtonStyle}" Cursor="Hand"/>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template" Value="{StaticResource WindowTemplateKeyControlTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ScorecardCommentaryButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="10.33"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Stroke="#FF393939">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF525252" Offset="0"/>
                                    <GradientStop Color="#FF212121" Offset="1"/>
                                    <GradientStop Color="#FE4E4E4E" Offset="0.403"/>
                                    <GradientStop Color="#FE242424" Offset="0.64"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="pressed" Stroke="#FF393939" Visibility="Visible" Opacity="0">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF707070" Offset="0"/>
                                    <GradientStop Color="#FF313131" Offset="1"/>
                                    <GradientStop Color="#FE6C6C6C" Offset="0.403"/>
                                    <GradientStop Color="#FE414141" Offset="0.641"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <TextBlock x:Name="textBlock1" HorizontalAlignment="Center" TextWrapping="Wrap" Text="{TemplateBinding Content}"  VerticalAlignment="Center" FontSize="10.667"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PotraitTopHeaderButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="ShowHideContent">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="contentPresenter">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-10"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="20"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid UseLayoutRounding="True" SnapsToDevicePixels="True" ClipToBounds="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="mo">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="normal" RadiusX="4" RadiusY="4" Stroke="{DynamicResource TopHeaderButtonBorderColor}" Fill="{DynamicResource TopHeaderButtonBackgroundColor}"/>
                        <Rectangle x:Name="mo" RadiusX="4" RadiusY="4" Stroke="{DynamicResource MouseOverTopHeaderButtonBackgroundColor}" Opacity="0" Fill="{DynamicResource MouseOverTopHeaderButtonBackgroundColor}"/>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="4,0">
                            <ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                        <Trigger Property="Tag" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ShowHideContent}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ShowHideContent}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StockButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid Height="35" UseLayoutRounding="True" SnapsToDevicePixels="True" ClipToBounds="True">
                        <Grid.Resources>
                            <Storyboard x:Key="Animate" RepeatBehavior="Forever">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:4" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:4.3" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:4.6" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:5" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:9.2" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:9.5" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="contentPresenter">
                                    <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="0,-35,0,0"/>
                                    <EasingThicknessKeyFrame KeyTime="0:0:4" Value="0,-35,0,0"/>
                                    <EasingThicknessKeyFrame KeyTime="0:0:4.3" Value="0,-70,0,0"/>
                                    <EasingThicknessKeyFrame KeyTime="0:0:4.6" Value="0,-70,0,0"/>
                                    <EasingThicknessKeyFrame KeyTime="0:0:5" Value="0,-105,0,0"/>
                                    <EasingThicknessKeyFrame KeyTime="0:0:9.2" Value="0,-105,0,0"/>
                                    <EasingThicknessKeyFrame KeyTime="0:0:9.5" Value="0,-140,0,0"/>
                                </ThicknessAnimationUsingKeyFrames>
                            </Storyboard>

                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="mo">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="normal" RadiusX="4" RadiusY="4" Stroke="{DynamicResource TopHeaderButtonBorderColor}" Fill="{DynamicResource TopHeaderButtonBackgroundColor}"/>
                        <Rectangle x:Name="mo" RadiusX="4" RadiusY="4" Stroke="{DynamicResource MouseOverTopHeaderButtonBackgroundColor}" Opacity="0" Fill="{DynamicResource MouseOverTopHeaderButtonBackgroundColor}"/>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Left" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" >
                            <ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
                            <i:Interaction.Triggers>
                                <i:EventTrigger>
                                    <ei:ControlStoryboardAction Storyboard="{StaticResource Animate}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PortraitStockButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid Height="30" UseLayoutRounding="True" VerticalAlignment="Center" SnapsToDevicePixels="True" ClipToBounds="True">
                        <Grid.Resources>
                            <Storyboard x:Key="Animate" RepeatBehavior="Forever">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:4" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:4.3" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:4.6" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:5" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:9.2" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:9.5" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="contentPresenter">
                                    <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="0,-30,0,0"/>
                                    <EasingThicknessKeyFrame KeyTime="0:0:4" Value="0,-30,0,0"/>
                                    <EasingThicknessKeyFrame KeyTime="0:0:4.3" Value="0,-60,0,0"/>
                                    <EasingThicknessKeyFrame KeyTime="0:0:4.6" Value="0,-60,0,0"/>
                                    <EasingThicknessKeyFrame KeyTime="0:0:5" Value="0,-90,0,0"/>
                                    <EasingThicknessKeyFrame KeyTime="0:0:9.2" Value="0,-90,0,0"/>
                                    <EasingThicknessKeyFrame KeyTime="0:0:9.5" Value="0,-120,0,0"/>
                                </ThicknessAnimationUsingKeyFrames>
                            </Storyboard>

                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="mo">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="normal" RadiusX="4" RadiusY="4" Stroke="{DynamicResource TopHeaderButtonBorderColor}" Fill="{DynamicResource TopHeaderButtonBackgroundColor}"/>
                        <Rectangle x:Name="mo" RadiusX="4" RadiusY="4" Stroke="{DynamicResource MouseOverTopHeaderButtonBackgroundColor}" Opacity="0" Fill="{DynamicResource MouseOverTopHeaderButtonBackgroundColor}"/>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Left" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
                            <i:Interaction.Triggers>
                                <i:EventTrigger>
                                    <ei:ControlStoryboardAction Storyboard="{StaticResource Animate}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TopHeaderButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="ShowHideContent">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="contentPresenter">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-10"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="20"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid UseLayoutRounding="True" SnapsToDevicePixels="True" ClipToBounds="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="mo">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="normal" RadiusX="4" RadiusY="4" Stroke="{DynamicResource TopHeaderButtonBorderColor}" Fill="{DynamicResource TopHeaderButtonBackgroundColor}"/>
                        <Rectangle x:Name="mo" RadiusX="4" RadiusY="4" Stroke="{DynamicResource MouseOverTopHeaderButtonBackgroundColor}" Opacity="0" Fill="{DynamicResource MouseOverTopHeaderButtonBackgroundColor}"/>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="10,0">
                            <ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                        <Trigger Property="Tag" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ShowHideContent}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ShowHideContent}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ImageCaptionButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisualStyle}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NormalButtonBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="grid" Width="25" Height="25" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="arrow_down">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="arrow_up">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="grid">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                                            <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="0,-20,0,0"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="path" Data="M0,4.667 C0,2.0894871 2.0894871,0 4.667,0 L15.333,0 C17.910513,0 20,2.0894871 20,4.667 L20,19.999695 C18,19.999695 4.9164821,20.000063 2.8818094E-16,19.999694 z" Fill="#7F000000" Stretch="Fill" Stroke="{x:Null}" Opacity="0"/>
                        <Ellipse x:Name="ellipse" Stroke="{x:Null}" Opacity="0" Margin="2,0">
                            <Ellipse.Fill>
                                <RadialGradientBrush>
                                    <GradientStop Color="#66FFFFFF" Offset="0"/>
                                    <GradientStop Offset="1"/>
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Path x:Name="arrow_down" Data="M3.8458187,7.8551117 L10.146,13.812667 16.121065,7.8942704 14.791583,6.6894742 10.208707,11.041481 5.1257293,6.6249681 z" Fill="#FFF4F4F5" Stretch="Fill" Stroke="{x:Null}" Margin="6,5,6,9"/>
                        <Path x:Name="arrow_up" Data="M3.8458187,7.8551117 L10.146,13.812667 16.121065,7.8942704 14.791583,6.6894742 10.208707,11.041481 5.1257293,6.6249681 z" Fill="#FFF4F4F5" Stretch="Fill" Stroke="{x:Null}" RenderTransformOrigin="0.5,0.5" Opacity="0" Margin="6,5,6,9">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="-1" ScaleX="1"/>
                                    <SkewTransform AngleY="0" AngleX="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextLinkButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="rectangle" Height="Auto" VerticalAlignment="Stretch" RadiusY="4" RadiusX="4" Opacity="0">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFC2C2C2" Offset="0"/>
                                    <GradientStop Color="#FFA3A3A3" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <TextBlock TextWrapping="Wrap" d:LayoutOverrides="Width, Height" Margin="5,3,5,2" Foreground="#FF3D3D3D" FontSize="9.333"><Run Text="SCORECARD"/></TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}"/>
        <Setter Property="FontSize" Value="11"/>
    </Style>
    <Style x:Key="ItemsControlGalleryStyle" TargetType="{x:Type ItemsControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ItemsControl}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                        <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource StandardScrollBarStyle}" Background="{x:Null}" Width="5" MinWidth="5"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ScrollViewer}" x:Key="TranslucentScrollViewerStyle">
        <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <!-- the width of the scrollbar is 5 -->
                            <ColumnDefinition Width="7"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                        <ScrollContentPresenter 
                            x:Name="PART_ScrollContentPresenter"
                            Margin="{TemplateBinding Padding}"
                            Content="{TemplateBinding Content}"
                            Grid.Column="0" Grid.Row="0"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            CanContentScroll="{TemplateBinding CanContentScroll}"/>
                        <ScrollBar 
                            x:Name="PART_VerticalScrollBar"
                            Grid.Column="1" Width="5" MinWidth="5"
                            Minimum="0.0"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            Style="{DynamicResource StandardScrollBarStyle}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VerticalOffset, Mode=OneWay}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"         
                            Cursor="Arrow"
                            AutomationProperties.AutomationId="VerticalScrollBar"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" 
                Value="false">
                <Setter Property="Foreground" 
                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver"
                Value="true">
                <Setter Property="VerticalScrollBarVisibility"
                Value="Visible"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ScrollBarButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="true" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="2" Background="#77CCCCCC">

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalScrollBarButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StandardScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="{StaticResource VerticalScrollBarBackgroundColor}"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButtonStyle}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow" Visibility="Collapsed"/>
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper"/>
                            </Track.Thumb>
                        </Track>
                        <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="3" Style="{StaticResource ScrollBarButtonStyle}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow" Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckedRadioButtonFocusStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RoundedTabStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid Height="35">
                        <Border x:Name="border3" BorderThickness="0" CornerRadius="0">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFBABCBB" Offset="0"/>
                                    <GradientStop Color="#FFB2B3B5" Offset="1"/>
                                    <GradientStop Color="White" Offset="0.5"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid x:Name="grid" Visibility="Collapsed" Margin="-1,0,-1,-1">
                                <Border x:Name="border" BorderBrush="#FFC6C6C6" BorderThickness="2" CornerRadius="0" Margin="3"/>
                                <Border x:Name="border1" BorderBrush="#FFBCBCBC" BorderThickness="2" CornerRadius="0" Margin="2"/>
                                <Border x:Name="border2" BorderBrush="#FFADADAD" BorderThickness="2" CornerRadius="0" Margin="1"/>
                            </Grid>
                        </Border>
                        <TextBlock TextWrapping="Wrap" Text="{TemplateBinding Content}" VerticalAlignment="Center" d:LayoutOverrides="Width" HorizontalAlignment="Center" FontWeight="Bold" Foreground="#FF3D3D3D" Margin="20,0" FontSize="10.667"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="grid" Value="Visible"/>
                            <Setter Property="Background" TargetName="border3">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFCCCCCC" Offset="0"/>
                                        <GradientStop Color="#FFC8C8C8" Offset="1"/>
                                        <GradientStop Color="#FFD6D6D6" Offset="0.5"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border3">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="DarkGray" Offset="0"/>
                                        <GradientStop Color="#FFA3A4A5" Offset="1"/>
                                        <GradientStop Color="#FFEFEFEF" Offset="0.5"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Tag" Value="right">
                            <Setter Property="CornerRadius" TargetName="border" Value="0,7,0,0"/>
                            <Setter Property="CornerRadius" TargetName="border1" Value="0,7,0,0"/>
                            <Setter Property="CornerRadius" TargetName="border2" Value="0,7,0,0"/>
                            <Setter Property="CornerRadius" TargetName="border3" Value="0,8,0,0"/>
                            <Setter Property="Margin" TargetName="grid" Value="-1,0,0,-1"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="left">
                            <Setter Property="CornerRadius" TargetName="border" Value="7,0,0,0"/>
                            <Setter Property="CornerRadius" TargetName="border1" Value="7,0,0,0"/>
                            <Setter Property="CornerRadius" TargetName="border2" Value="7,0,0,0"/>
                            <Setter Property="CornerRadius" TargetName="border3" Value="8,0,0,0"/>
                            <Setter Property="Margin" TargetName="grid" Value="0,0,-1,-1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="InningsScoreboardTitleStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="#FF4d4d4d"/>
        <Setter Property="Background" Value="#F4F4F4"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid  HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="presssedState">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="selectedstate" BorderBrush="#FFB8B8B8" BorderThickness="1,1,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" CornerRadius="5,5,0,0" Background="#FFF1F1F1" Visibility="Collapsed">
                            <Border BorderBrush="White" BorderThickness="1,1,1,0" CornerRadius="6,6,0,0">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFCECECE" Offset="0"/>
                                        <GradientStop Color="#FF777777" Offset="1"/>
                                        <GradientStop Color="#FF7B7B7B" Offset="0.585"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Border>
                        <Border x:Name="presssedState" BorderBrush="#FFB8B8B8" BorderThickness="1,1,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" CornerRadius="5,5,0,0" Background="#FFF1F1F1" Visibility="Visible" Opacity="0">
                            <Border BorderBrush="White" BorderThickness="1,1,1,0" CornerRadius="6,6,0,0" Background="#FFE7E7E7"/>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Margin="10,8,10,5" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="selectedstate" Value="Visible"/>
                            <Setter Property="Foreground" Value="#FFFFFFFF"/>
                            <Setter Property="Margin" Value="10,5" TargetName="contentPresenter"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TVChannelsButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="#F4F4F4"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckBoxStrokeBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed_bg">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rightline_nrml">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="top_line_normal">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="selected_bg">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="top_line">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rightline">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="black_text">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="red_text">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="white_text">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="pressed_bg" StrokeThickness="0" Opacity="0">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFD8D8D8" Offset="0"/>
                                    <GradientStop Color="#FFBCBCBC" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="rightline_nrml" StrokeThickness="0" Width="1" HorizontalAlignment="Right" Fill="#FFBEBDC3"/>
                        <Rectangle x:Name="top_line_normal" StrokeThickness="0" VerticalAlignment="Top" Height="1" Fill="#FFBEBDC3"/>
                        <Rectangle x:Name="selected_bg" Fill="Black" StrokeThickness="0" Opacity="0"/>
                        <Rectangle x:Name="top_line" StrokeThickness="0" VerticalAlignment="Top" Height="1" Opacity="0" Fill="#FF3D3D3D"/>
                        <Rectangle x:Name="rightline" StrokeThickness="0" Width="1" HorizontalAlignment="Right" Opacity="0" Fill="#FF3D3D3D"/>
                        <TextBlock x:Name="white_text" TextWrapping="Wrap" Text="{TemplateBinding Content}" d:LayoutOverrides="Width, Height" FontFamily="{DynamicResource Segoe360Font}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="20,0" Foreground="White" RenderTransformOrigin="0,0" FontWeight="Bold">
							<TextBlock.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform X="0.2" Y="0.3"/>
								</TransformGroup>
							</TextBlock.RenderTransform>
                        </TextBlock>
                        <TextBlock x:Name="black_text" TextWrapping="Wrap" Text="{TemplateBinding Content}"  VerticalAlignment="Center" HorizontalAlignment="Center" Margin="20,0" FontWeight="Bold"/>
                        <TextBlock x:Name="red_text" TextWrapping="Wrap" Text="{TemplateBinding Content}"  VerticalAlignment="Center" HorizontalAlignment="Center" Margin="20,0" FontWeight="Bold" Foreground="#FFFF4B20" Opacity="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource CheckedRadioButtonFocusStyle}"/>
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PopupCloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#FFF4F4F5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="close" >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Ellipse x:Name="ellipse" Margin="-7" Opacity="0">
                            <Ellipse.Fill>
                                <RadialGradientBrush>
                                    <GradientStop Color="#99FFFFFF"/>
                                    <GradientStop Offset="0.823"/>
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Path x:Name="path" Data="M6,0 C7.4768332,-1.8281439 8.8097693,-1.8230837 10,0 L10,6 16,6 C17.369673,7.2868282 17.462206,8.6170198 16,10 L10,10 10,16 C8.7639342,17.418663 7.4274423,17.372596 6,16 L6,10 0,10 C-1.2820304,8.6666667 -1.2900896,7.3333333 0,6 L6,6 z" Fill="{TemplateBinding Background}" Stretch="Fill" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Stretch" Margin="1.042,-0.292,-1.042,0.292">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="45"/>
                                    <TranslateTransform X="-1.1510322689407824" Y="0.36283771440592005"/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ArrowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Ellipse x:Name="ellipse" Stroke="{x:Null}" Margin="-5" Opacity="0.3">
                            <Ellipse.Fill>
                                <RadialGradientBrush>
                                    <GradientStop Color="#7F000000" Offset="0"/>
                                    <GradientStop Color="#00000000" Offset="1"/>
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Path x:Name="path" Data="M23,0 L30,0 30,23 30,30 23,30 0,30 0,23 23,23 z" Fill="#FFF4F4F5" Height="20" Stretch="Fill" Stroke="{x:Null}" VerticalAlignment="Center" Width="20" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" Margin="0,0,9,0" Opacity="0.6">
                            <Path.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Path.LayoutTransform>
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="-45"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsCancel" Value="False"/>
                        <Trigger Property="IsCancel" Value="False"/>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
                        <Trigger Property="Tag" Value="Left">
                            <Setter Property="LayoutTransform" TargetName="path">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Margin" TargetName="path" Value="9,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SensexListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="rectangle" Stroke="#FFA5A5A5" Margin="3,0,3,5" Opacity="0">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.46,-0.066" StartPoint="0.46,0.993">
                                    <GradientStop Color="#FFDADADA"/>
                                    <GradientStop Color="White" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Path x:Name="path" Data="M0.5,0.5 L9.5,9.5 0.5,9.5 z" HorizontalAlignment="Center" Height="10" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Stroke="#FFA5A5A5" VerticalAlignment="Bottom" Width="10" Margin="0,0,0,0.458" Fill="#FFDBDBDB" Opacity="0">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="-45"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Path x:Name="path1" Data="M-1.6614395,-1.0471056 L13.263148,-1.0462778 9.6744579,2.6167373 1.8519485,2.3692147 z" Fill="#FFDBDBDB" Height="3.34" Stretch="Fill" VerticalAlignment="Bottom" HorizontalAlignment="Center" Width="14.346" Margin="0,0,0,3.505" Opacity="0" />
                        <TextBlock x:Name="textBlock" Margin="8,5,8,10" TextWrapping="Wrap" Text="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" TargetName="textBlock" Value="{DynamicResource HighlightRedBrush}"/>
                            <Setter Property="Opacity" TargetName="rectangle" Value="1"/>
                            <Setter Property="Opacity" TargetName="path" Value="1"/>
                            <Setter Property="Opacity" TargetName="path1" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="10.667"/>
        <Setter Property="Foreground" Value="#FF0083B4"/>
    </Style>
    <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderBrush" Value="#FF688CAF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <ControlTemplate.Resources>
                                        <Style x:Key="DataGridScrollBarThumb" TargetType="{x:Type Thumb}">
                                            <Setter Property="OverridesDefaultStyle" Value="true"/>
                                            <Setter Property="IsTabStop" Value="false"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Border SnapsToDevicePixels="True" UseLayoutRounding="True" Background="#991c1c1c">
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                        <Style x:Key="DataGridVerticalScrollBarStyle" TargetType="{x:Type ScrollBar}">
                                            <Setter Property="Background" Value="{StaticResource VerticalScrollBarBackgroundColor}"/>
                                            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                                            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                            <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                                            <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                        <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="Transparent">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>
                                                            <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButtonStyle}"  Visibility="Collapsed"/>
                                                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                                                <Track.DecreaseRepeatButton>
                                                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                                                                </Track.DecreaseRepeatButton>
                                                                <Track.IncreaseRepeatButton>
                                                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                                                                </Track.IncreaseRepeatButton>
                                                                <Track.Thumb>
                                                                    <Thumb Style="{StaticResource DataGridScrollBarThumb}" />
                                                                </Track.Thumb>
                                                            </Track>
                                                            <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="3" Style="{StaticResource ScrollBarButtonStyle}"  Visibility="Collapsed"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsEnabled" Value="false">
                                                                <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackgroundBrush}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ControlTemplate.Resources>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="5"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                        <ScrollBar Opacity="0" x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource DataGridVerticalScrollBarStyle}"/>
                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" />
                                        </Grid>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" >
                                                        <DoubleAnimation To="1" Duration="00:00:00.3" BeginTime="00:00:00" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" >
                                                        <DoubleAnimation To="0" Duration="00:00:00.3" BeginTime="00:00:00" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Styles Added by Muru-->
    <Style TargetType="Border" x:Key="ThumbnailBorderStyle">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#FFCCCCCC"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="Height" Value="70"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="Border" x:Key="BigThumbnailBorderStyle">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#FFCCCCCC"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Width" Value="145"/>
        <Setter Property="Height" Value="145"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <!-- Header Style-->
    <Style TargetType="ListBox" x:Key="TransparentListBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <ItemsPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBoxItem" x:Key="RelatedListBoxItemStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid Margin="2" Background="Transparent">
                        <Border x:Name="SelectionBorder" BorderThickness="2"  BorderBrush="#00FF9B35">
                            <Grid>
                                <Rectangle Visibility="Collapsed" x:Name="SelectionBG" >
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFFDAAC" Offset="0"/>
                                            <GradientStop Color="#00FFDAAC" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <ContentPresenter Margin="3"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" TargetName="SelectionBorder" Value="#FFFF9B35"/>
                            <Setter Property="Visibility" TargetName="SelectionBG" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <GridLength x:Key="CricketCalendarFirstColumn">75</GridLength>
    <GridLength x:Key="CricketCalendarColumn">135</GridLength>
    <Thickness x:Key="ScoreCardControlMargin">15,5,15,0</Thickness>
    <!-- Related Video Grid Length-->
    <GridLength x:Key="RelatedVideoGridLength">400</GridLength>
    <!-- Header Control Style-->
    <Style x:Key="CricketHeaderControl" TargetType="{x:Type ContentControl}">
        <Setter Property="Margin" Value="0,0,50,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="15"/>
                            <RowDefinition Height="25"/>
                        </Grid.RowDefinitions>
                        <TextBlock TextTrimming="CharacterEllipsis" Text="{Binding Text, ElementName=DateTB}" Grid.Row="0" 
                                   VerticalAlignment="{Binding VerticalAlignment, ElementName=DateTB}"
                                   HorizontalAlignment="{Binding HorizontalAlignment, ElementName=DateTB}"
                                   FontSize="{Binding FontSize, ElementName=DateTB}" 
                                   FontFamily="{Binding FontFamily, ElementName=DateTB}" 
                                   Foreground="White" RenderTransformOrigin="0.5,0.5">
                                                       <TextBlock.RenderTransform>
                                                              <TransformGroup>
                                                                     <ScaleTransform/>
                                                                     <SkewTransform/>
                                                                     <RotateTransform/>
                                                                     <TranslateTransform X="1" Y="1"/>
                                                              </TransformGroup>
                                                       </TextBlock.RenderTransform>
                        </TextBlock>
                        <TextBlock TextTrimming="CharacterEllipsis" x:Name="DateTB" Text="{TemplateBinding Tag}" Grid.Row="0" 
                                   VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="10" 
                                   FontFamily="{DynamicResource Segoe360Font}" Foreground="#FFB10010"/>
                        <TextBlock TextTrimming="CharacterEllipsis" Text="{Binding Text, ElementName=MatchTitle}" Grid.Row="1" VerticalAlignment="{Binding VerticalAlignment, ElementName=MatchTitle}" 
                                   HorizontalAlignment="{Binding HorizontalAlignment, ElementName=MatchTitle}" FontSize="{Binding FontSize, ElementName=MatchTitle}" FontFamily="{Binding FontFamily, ElementName=MatchTitle}" FontWeight="{Binding FontWeight, ElementName=MatchTitle}"  Foreground="White" RenderTransformOrigin="0.5,0.5">
                                                       <TextBlock.RenderTransform>
                                                              <TransformGroup>
                                                                     <ScaleTransform/>
                                                                     <SkewTransform/>
                                                                     <RotateTransform/>
                                                                     <TranslateTransform X="1" Y="1"/>
                                                              </TransformGroup>
                                                       </TextBlock.RenderTransform>
                        </TextBlock>
                        <TextBlock x:Name="MatchTitle" TextTrimming="CharacterEllipsis" Text="{TemplateBinding Content}" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="16" FontFamily="{DynamicResource Segoe360Font}" FontWeight="SemiBold" Foreground="#FF3F3F3F"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HeaderedContainerStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <Border Background="Black" BorderThickness="8" BorderBrush="White">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="58"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="Header">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF3F3F3F" Offset="0"/>
                                        <GradientStop Color="Black" Offset="1"/>
                                        <GradientStop Color="#FF444444" Offset="0.443"/>
                                        <GradientStop Color="#FF2A2A2A" Offset="0.62"/>
                                    </LinearGradientBrush>
                                </Grid.Background>
                                <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="{TemplateBinding Header}" VerticalAlignment="Center" Foreground="#FFE5E5E5" Margin="20,0,0,0" FontSize="32" FontWeight="Bold"/>
                                <Button Visibility="Collapsed" Grid.Column="1" Content="Button" Name="btnClose" HorizontalAlignment="Right" Height="16" Margin="20,0" Style="{DynamicResource PopupCloseButtonStyle}"  Width="16"/>
                            </Grid>
                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="1"/>
                            <Grid Grid.Row="2">
                                <local:SocialMediaInteraction/>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PopupBaseContainerStyle" TargetType="{x:Type controls:PopupBaseControl}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:PopupBaseControl}">
                    <Border Background="Black" BorderThickness="8" BorderBrush="White">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="58"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="Header">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF3F3F3F" Offset="0"/>
                                        <GradientStop Color="Black" Offset="1"/>
                                        <GradientStop Color="#FF444444" Offset="0.443"/>
                                        <GradientStop Color="#FF2A2A2A" Offset="0.62"/>
                                    </LinearGradientBrush>
                                </Grid.Background>
                                <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="{TemplateBinding HeaderText}" VerticalAlignment="Center" FontFamily="{DynamicResource Segoe360Font}"  Foreground="#FFE5E5E5" Margin="20,0,0,0" FontSize="28" />
                                <Button Grid.Column="1" Content="Button" Name="CloseButton" HorizontalAlignment="Right" Height="16" Margin="20,0" Style="{DynamicResource PopupCloseButtonStyle}"  Width="16"/>
                            </Grid>
                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="1"/>
                            <Grid Grid.Row="2" Visibility="{TemplateBinding FooterVisible}" IsEnabled= "{TemplateBinding FooterEnabled}" >
                                <local:SocialMediaInteraction CommentsVisible="{TemplateBinding CommentsVisible}"/>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <RadialGradientBrush x:Key="RadialGradientBrush" >
        <GradientStop Color="White" Offset="0.46"/>
        <GradientStop Color="#FFE2E2E2" Offset="1"/>
    </RadialGradientBrush>
    <Style x:Key="PopupBaseSubContainerStyle" TargetType="{x:Type controls:PopupBaseControl}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{DynamicResource RadialGradientBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:PopupBaseControl}">
                    <Border Background="Black" BorderThickness="8" BorderBrush="White">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="Header">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF3F3F3F" Offset="0"/>
                                        <GradientStop Color="Black" Offset="1"/>
                                        <GradientStop Color="#FF444444" Offset="0.443"/>
                                        <GradientStop Color="#FF2A2A2A" Offset="0.62"/>
                                    </LinearGradientBrush>
                                </Grid.Background>
                                <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="{TemplateBinding HeaderText}" VerticalAlignment="Center"
                                           FontFamily="{DynamicResource Segoe360Font}"  Foreground="#FFE5E5E5" Margin="12,0,0,0" FontSize="16" />
                                <Button Grid.Column="1" Content="Button" Name="CloseButton" HorizontalAlignment="Right" Height="16" Margin="12,0" Style="{DynamicResource PopupCloseButtonStyle}"  Width="16"/>
                            </Grid>
                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="1"/>
                           
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ShareHeaderedContainerStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{DynamicResource RadialGradientBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <Border Background="Black" BorderThickness="8" BorderBrush="White">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="Header">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF3F3F3F" Offset="0"/>
                                        <GradientStop Color="Black" Offset="1"/>
                                        <GradientStop Color="#FF444444" Offset="0.443"/>
                                        <GradientStop Color="#FF2A2A2A" Offset="0.62"/>
                                    </LinearGradientBrush>
                                </Grid.Background>
                                <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="{TemplateBinding Header}" VerticalAlignment="Center" FontFamily="{DynamicResource Segoe360Font}" Foreground="#FFE5E5E5" Margin="20,0,0,0" FontSize="16" />
                                <Button Visibility="Collapsed" Grid.Column="1" Content="Button" Name="btnClose" HorizontalAlignment="Right" Height="16" Margin="20,0" Style="{DynamicResource PopupCloseButtonStyle}"  Width="16"/>
                            </Grid>
                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="1"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LoginScreenSurfaceButton" TargetType="{x:Type Custom:SurfaceButton}">
        <Setter Property="MinWidth" Value="75"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:SurfaceButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Press">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="PressedBrush">
                                <EasingColorKeyFrame KeyTime="0" Value="#FFFFDAAC"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#7FFFDAAC"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Release">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBrush">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="PressedBrush">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#00FFDAAC"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Grid" Background="Transparent" SnapsToDevicePixels="True">

                        <Border BorderBrush="#FF525252" BorderThickness="1">
                            <Border BorderBrush="Black" BorderThickness="1" Padding="10,3" Background="#FF2A2A2A">
                                <ContentPresenter   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </Border>
                        <Border x:Name="PressedBrush" BorderBrush="#FFFF9B35" BorderThickness="1" HorizontalAlignment="Stretch" Width="Auto" Visibility="Collapsed" Opacity="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#00FFDAAC" Offset="0"/>
                                    <GradientStop Color="#00FFDAAC" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
								Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Press}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Release}" />
                            </Trigger.ExitActions>

                        </Trigger>
                        <Trigger Property="IsEnabled"
								Value="False">
                            <Setter Property="Foreground"
									Value="{DynamicResource {x:Static Custom:SurfaceColors.ButtonForegroundDisabledBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ImageSurfaceButton" TargetType="{x:Type Custom:SurfaceButton}">
        <Setter Property="Width" Value="64"/>
        <Setter Property="Height" Value="64"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Background" Value="{DynamicResource {x:Static Custom:SurfaceColors.ButtonBackgroundBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static Custom:SurfaceColors.ButtonForegroundBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:SurfaceButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Press">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="PressedBrush">
                                <EasingColorKeyFrame KeyTime="0" Value="#FFFFDAAC"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#7FFFDAAC"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Release">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBrush">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="PressedBrush">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#00FFDAAC"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Grid" Background="Transparent"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Border x:Name="PressedBrush" BorderBrush="#FFFF9B35" BorderThickness="1" HorizontalAlignment="Stretch" Width="Auto" Visibility="Collapsed" Opacity="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#00FFDAAC" Offset="0"/>
                                    <GradientStop Color="#00FFDAAC" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Image Margin="2" Width="Auto" Height="Auto" Source="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
								Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Press}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Release}" />
                            </Trigger.ExitActions>
                            <Setter Property="Foreground"
									Value="{DynamicResource {x:Static Custom:SurfaceColors.ButtonForegroundPressedBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
								Value="False">
                            <Setter Property="Foreground"
									Value="{DynamicResource {x:Static Custom:SurfaceColors.ButtonForegroundDisabledBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SurfaceTextContentStyle"
        	TargetType="{x:Type Custom:SurfaceScrollViewer}">
        <Setter Property="IsManipulationEnabled"
        		Value="False"/>
        <Setter Property="PanningMode"
        		Value="None"/>
        <Setter Property="HorizontalAlignment"
        		Value="Stretch"/>
        <Setter Property="VerticalAlignment" 
        		Value="Stretch"/>
        <Setter Property="VerticalContentAlignment"
        		Value="Top"/>
    </Style>
    <Style x:Key="InputTextBoxStyle" TargetType="{x:Type Custom:SurfaceTextBox}">
        <Setter Property="CaretBrush" Value="Black"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}"/>
        <Setter Property="Width" Value="250"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="KeyboardNavigation.TabNavigation"
        		Value="None"/>
        <Setter Property="AllowDrop"
        		Value="True"/>
        <Setter Property="Padding"
        		Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:SurfaceTextBox}">
                    <Grid>
                        <Border BorderThickness="1" BorderBrush="#FF7B7B7B">
                            <Border x:Name="TextBoxBody" 
        							SnapsToDevicePixels ="{TemplateBinding SnapsToDevicePixels}" BorderThickness="1" Background="#00000000" BorderBrush="#FFEBEBEB">
                                <Grid>
                                    <!-- The implementation places the Content into the ScrollViewer. It must be named PART_ContentHost for the control to function -->
                                    <Custom:SurfaceScrollViewer x:Name="PART_ContentHost" 
        									Margin="{TemplateBinding Padding}" Style="{StaticResource SurfaceTextContentStyle}"
        									 />
                                </Grid>
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused"
        								Value="True" />
                                <Condition Property="IsEnabled"
        								Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush"
        							Value="{DynamicResource {x:Static Custom:SurfaceColors.TextBoxBorderFocusedBrushKey}}"/>
                            <Setter Property="Background"
        							Value="{DynamicResource {x:Static Custom:SurfaceColors.TextBoxBackgroundFocusedBrushKey}}"/>
                            <Setter Property="Foreground"
        							Value="{DynamicResource {x:Static Custom:SurfaceColors.TextBoxForegroundFocusedBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
        						Value="False">
                            <Setter Property="Background"	
        							Value="{DynamicResource {x:Static Custom:SurfaceColors.TextBoxBackgroundDisabledBrushKey}}"/>
                            <Setter Property="Foreground"
        							Value="{DynamicResource {x:Static Custom:SurfaceColors.TextBoxForegroundDisabledBrushKey}}"/>
                            <Setter Property="BorderBrush"
        							Value="{DynamicResource {x:Static Custom:SurfaceColors.TextBoxBorderDisabledBrushKey}}"/>
                            <Setter Property="Opacity"	
        							TargetName="PART_ContentHost"
        							Value="0.33"  />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Back Button Style-->
    
    <!--Added by Muru 20 Aug 2011-->
    <SolidColorBrush x:Key="ScrollBarThumbBG" Color="#CC212121"/>
    <Thickness x:Key="ThumbnailMargin">0,0,0,0</Thickness>

    <!-- Surcface ScrollViewer Style-->
    <SolidColorBrush x:Key="ControlHitAreaBrush"    
			Color="#00FFFFFF"/>
    <!-- Minimum HitArea Base Style for 55 dpi-->
    <Style x:Key="SurfaceHitAreaBaseStyle"
			TargetType="{x:Type Control}">
        <Setter Property="SnapsToDevicePixels"
				Value="False"/>
        <Setter Property="Background"
				Value="{StaticResource ControlHitAreaBrush}"/>
        <Setter Property="IsTabStop"
				Value="False"/>
        <Setter Property="Focusable"
				Value="False"/>
        <Setter Property="FocusVisualStyle"
				Value="{x:Null}"/>
        <Setter Property="MinWidth"
				Value="40" />
        <Setter Property="MinHeight"
				Value="40" />
    </Style>
    <System:Double x:Key="ScrollbarThumbWidthHeight">3</System:Double>
    <Style x:Key="HorizontalThumbStyle"          TargetType="{x:Type Custom:SurfaceThumb}"
                                    BasedOn="{StaticResource SurfaceHitAreaBaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:SurfaceThumb}">
                    <Grid x:Name="Grid" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Bottom" >
                        <Rectangle  x:Name="Thumb"
                            Width="Auto"
                            Height="{DynamicResource ScrollbarThumbWidthHeight}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Bottom"  
                            Fill="{TemplateBinding Background}" Margin="0,0,0,1" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="Thumb" Value="{DynamicResource {x:Static Custom:SurfaceColors.ThumbDisabledBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollBar Vert Thumb -->
    <Style x:Key="SurfaceScrollBarThumbStyle"
                                    TargetType="{x:Type Custom:SurfaceThumb}"
                                    BasedOn="{StaticResource SurfaceHitAreaBaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:SurfaceThumb}">






















                    <Grid   x:Name="Grid"
                                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Right">
                        <Rectangle  x:Name="Thumb"
                                                                                                Height="Auto"
                                                                                                Width="{DynamicResource ScrollbarThumbWidthHeight}" 
                                                                                                HorizontalAlignment="Center"
                                                                                                VerticalAlignment="Stretch"
                                                                                                Fill="{TemplateBinding Background}" Margin="0,0,1,0" Stroke="{x:Null}" RadiusX="0" RadiusY="0" SnapsToDevicePixels="True" />
                    </Grid>
                    <ControlTemplate.Triggers>









                        <Trigger  Property="IsEnabled"
                                                                                                Value="False">
                            <Setter Property="Fill"
                                                                                                            TargetName="Thumb"
                                                                                                            Value="{DynamicResource {x:Static Custom:SurfaceColors.ThumbDisabledBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="HorizontalSurfaceScrolBarStyle"
			TargetType="{x:Type Custom:SurfaceScrollBar}" BasedOn="{StaticResource SurfaceHitAreaBaseStyle}">
        <Setter Property="Stylus.IsPressAndHoldEnabled"
				Value="False"/>
        <Setter Property="Stylus.IsFlicksEnabled"
				Value="False"/>

        <Setter Property="Height"
				Value="Auto"/>
        <Style.Triggers>
            <!-- Horizontal orientation -->
            <Trigger Property="Orientation"   Value="Horizontal">
                <Setter Property="Width"
						Value="Auto"/>

                <!-- change the whole template -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Custom:SurfaceScrollBar}">
                            <Grid x:Name="GridRoot" VerticalAlignment="Bottom" Background="{x:Null}">
                                <Border x:Name="Track"
										VerticalAlignment="Stretch"
										HorizontalAlignment="Stretch">
                                    <Track x:Name="PART_Track">
                                        <Track.Thumb>
                                            <Custom:SurfaceThumb  Style="{DynamicResource HorizontalThumbStyle}"
													VerticalAlignment="Bottom" 
													x:Name="Thumb" Background="{TemplateBinding BorderBrush}"/>
                                        </Track.Thumb>
                                    </Track>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <!-- Animates Scrollbar from small to large state -->
                                <Trigger Property="IsEnabled"
										Value="False">
                                    <Setter Property="IsEnabled"
											TargetName="PART_Track"
											Value="False"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="VerticalSurfaceScrollBarStyle"
			TargetType="{x:Type Custom:SurfaceScrollBar}" BasedOn="{StaticResource SurfaceHitAreaBaseStyle}">

        <Setter Property="Stylus.IsPressAndHoldEnabled"
				Value="False"/>
        <Setter Property="Stylus.IsFlicksEnabled"
				Value="False"/>


        <Setter Property="Template">
            <Setter.Value>
                <!-- vertical scroll bar -->
                <ControlTemplate TargetType="{x:Type Custom:SurfaceScrollBar}">
                    <Grid x:Name="GridRoot" Background="#00F13131" HorizontalAlignment="Right" Width="12">
                        <Border x:Name="Track"
								VerticalAlignment="Stretch"
								HorizontalAlignment="Stretch">
                            <Track x:Name="PART_Track"
									IsDirectionReversed="True">
                                <Track.Thumb>
                                    <Custom:SurfaceThumb  Style="{StaticResource SurfaceScrollBarThumbStyle}"
											Background="{TemplateBinding BorderBrush}"
											HorizontalAlignment="Right" 
											x:Name="Thumb" />
                                </Track.Thumb>
                            </Track>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Animates Scrollbar from small to large state -->
                        <Trigger Property="IsEnabled"
								Value="False">
                            <Setter Property="IsEnabled"
									TargetName="PART_Track"
									Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>

    <Style  TargetType="{x:Type Custom:SurfaceScrollViewer}"       
                                                >
        <Setter Property="BorderBrush" Value="{DynamicResource ScrollBarThumbBG}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:SurfaceScrollViewer}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnScrollChanged">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="verticalRect">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="VerticalBottom">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="horizontalRect">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HorizontalBottom">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_HorizontalScrollBar">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_VerticalScrollBar">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="verticalRect">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.4"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="horizontalRect">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.4"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="VerticalBottom">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value=".4"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HorizontalBottom">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.4"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>

                    </ControlTemplate.Resources>
                    <Grid   Background="Transparent"
                                                                                                HorizontalAlignment="Stretch"
                                                                                                Margin="{TemplateBinding BorderThickness}"
                                                                                                VerticalAlignment="Stretch"
                                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid.Resources>

                            <Storyboard x:Key="HideScrollBar">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_HorizontalScrollBar">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_VerticalScrollBar">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>

                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="verticalRect">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="horizontalRect">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="VerticalBottom">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HorizontalBottom">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="verticalRect">

                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="VerticalBottom">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="horizontalRect">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HorizontalBottom">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </Grid.Resources>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <i:Interaction.Triggers>
                            <ei:TimerTrigger TotalTicks="0">
                                <ei:ControlStoryboardAction Storyboard="{StaticResource HideScrollBar}" />
                            </ei:TimerTrigger>
                        </i:Interaction.Triggers>
                        <Border x:Name="PART_ElasticBorder"
                                                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                                                                BorderBrush="Transparent"
                                                                                                                Background="{TemplateBinding Background}">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}"
                                                                                                                                Content="{TemplateBinding Content}"
                                                                                                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                                                                                                CanHorizontallyScroll="False"
                                                                                                                                CanVerticallyScroll="False"
                                                                                                                                Grid.ColumnSpan="1"
                                                                                                                                Grid.RowSpan="1"
                                                                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <Grid x:Name="VerticalShade" Visibility="Collapsed">
                            <Rectangle x:Name="verticalRect" Height="20" Stroke="{x:Null}" VerticalAlignment="Top" Width="Auto" Opacity="1" Visibility="Visible">

                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#7F585858" Offset="0.003"/>
                                        <GradientStop Offset="0.581" Color="#00585858"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="VerticalBottom" Height="20" Stroke="{x:Null}" VerticalAlignment="Bottom" Width="Auto" Opacity="1" Visibility="Visible">

                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                        <GradientStop Color="#7F8B8B8B"/>
                                        <GradientStop Offset="0.599" Color="#00585858"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Grid>
                        <Grid x:Name="HorizontalShade" Visibility="Collapsed">
                            <Rectangle x:Name="horizontalRect" Height="Auto" Stroke="{x:Null}" VerticalAlignment="Stretch" Width="20" Opacity="1" HorizontalAlignment="Left" Visibility="Collapsed">

                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.845,0.465" StartPoint="-0.595,0.465">
                                        <GradientStop Color="#FF585858"/>
                                        <GradientStop Offset="0.83" Color="#00585858"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle  x:Name="HorizontalBottom" Height="Auto" Stroke="{x:Null}" VerticalAlignment="Stretch" Width="20" Opacity="1" HorizontalAlignment="Right" Visibility="Collapsed">

                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.155,0.465" StartPoint="1.245,0.465">
                                        <GradientStop Color="#FF585858"/>
                                        <GradientStop Offset="0.83" Color="#00585858"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Grid>
                        <Custom:SurfaceScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                                                                                x:Name="PART_HorizontalScrollBar"
                                                                                                                Grid.Row="0"
                                                                                                                Orientation="Horizontal"
                                                                                                                ViewportSize="{TemplateBinding ViewportWidth}"
                                                                                                                Maximum="{TemplateBinding ScrollableWidth}"
                                                                                                                Minimum="0"
                                                                                                                Background="{TemplateBinding Background}"
                                                                                                                Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                                                                                AutomationProperties.AutomationId="HorizontalScrollBar"
                                                                                                                Height="Auto"                                   
                                                                                                                                                                
                                                                                                                LargeChange="1"
                                                                                                                ClipToBounds="True"
                                                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Style="{DynamicResource HorizontalSurfaceScrolBarStyle}" BorderBrush="{TemplateBinding BorderBrush}" Opacity="0" />
                        <Custom:SurfaceScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                                                                                x:Name="PART_VerticalScrollBar"
                                                                                                                Grid.Column="1"
                                                                                                                Grid.Row="0"
                                                                                                                Orientation="Vertical"
                                                                                                                ViewportSize="{TemplateBinding ViewportHeight}"
                                                                                                                Maximum="{TemplateBinding ScrollableHeight}"
                                                                                                                Minimum="0"
                                                                                                                MaxWidth="20"
                                                                                                                Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                                                                                AutomationProperties.AutomationId="VerticalScrollBar"                                                                                                                                                           
                                                                                                                Style="{StaticResource VerticalSurfaceScrollBarStyle}"                                   
                                                                                                                LargeChange="1"
                                                                                                                ClipToBounds="True"
                                                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Right" Background="{x:Null}" BorderBrush="{TemplateBinding BorderBrush}" Opacity="0"/>
                        <Border x:Name="Container"
                                                                                                                Grid.Column="1"
                                                                                                                Grid.Row="1"
                                                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                                                                BorderBrush="Transparent"
                                                                                                                Background="{TemplateBinding Background}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ScrollViewer.ScrollChanged">
                            <BeginStoryboard x:Name="OnScrollChanged_BeginStoryboard" Storyboard="{StaticResource OnScrollChanged}"/>
                        </EventTrigger>
                        <Trigger Property="IsEnabled"
                                                                                                                Value="False">
                            <Setter Property="IsEnabled"
                                                                                                                                TargetName="PART_HorizontalScrollBar"
                                                                                                                                Value="False"/>
                            <Setter Property="IsEnabled"
                                                                                                                                TargetName="PART_VerticalScrollBar"
                                                                                                                                Value="False"/>
                            <Setter Property="BorderBrush"
                                                                                                                                TargetName="PART_ElasticBorder"
                                                                                                                                Value="{DynamicResource {x:Static Custom:SurfaceColors.ControlBorderDisabledBrushKey}}"/>

                        </Trigger>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter Property="Visibility" Value="Visible" TargetName="HorizontalShade"/>

                        </Trigger>
                        <Trigger Property="Tag" Value="Vertical">
                            <Setter Property="Visibility" Value="Visible" TargetName="VerticalShade"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="SurfaceListBoxStyle"  TargetType="{x:Type Custom:SurfaceListBox}">
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:SurfaceListBox}">
                    <Grid  SnapsToDevicePixels="True" >
                        <Custom:SurfaceScrollViewer Tag="{TemplateBinding Tag}"
								HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
								VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
								Focusable="False"
								Width="Auto"
								Height="Auto"
								MinHeight="{TemplateBinding MinHeight}"
								MinWidth="{TemplateBinding MinWidth}"
								x:Name="scrollViewer"
								Elasticity="{TemplateBinding Custom:SurfaceScrollViewer.Elasticity}" >
                            <ItemsPresenter ClipToBounds="False"
									MinHeight="{TemplateBinding MinHeight}"
									MinWidth="{TemplateBinding MinWidth}"/>
                        </Custom:SurfaceScrollViewer>
                        <Border x:Name="Border"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping"
								Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll"
									Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MiniThumbSurfaceListBoxStyle"  TargetType="{x:Type Custom:SurfaceListBox}">
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:SurfaceListBox}">
                    <Grid  SnapsToDevicePixels="True" >
                        <Custom:SurfaceScrollViewer Tag="{TemplateBinding Tag}"
								HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
								VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
								Focusable="False"
								 Height="40"
								MinHeight="2"
								MinWidth="0"
								x:Name="scrollViewer"
								Elasticity="{TemplateBinding Custom:SurfaceScrollViewer.Elasticity}" >
                            <ItemsPresenter ClipToBounds="False" VerticalAlignment="Bottom"
									MinHeight="0"
									MinWidth="0"/>
                        </Custom:SurfaceScrollViewer>
                        <Border x:Name="Border"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping"
								Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll"
									Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MiniThumbnailListItemStyle" TargetType="{x:Type Custom:SurfaceListBoxItem}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Width" Value="33"/>
        <Setter Property="HorizontalContentAlignment"
    			Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:SurfaceListBoxItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Press">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="PressedBrush">
                                <EasingColorKeyFrame KeyTime="0" Value="#FFFFDAAC"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#7FFFDAAC"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Release">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBrush">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="PressedBrush">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#00FFDAAC"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid  Height="33" SnapsToDevicePixels="True"  >
                        <Border x:Name="PressedBrush" BorderBrush="#FFFF9B35" BorderThickness="0,1,0,0" HorizontalAlignment="Stretch" Width="Auto" Visibility="Collapsed" Opacity="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#00FFDAAC" Offset="0"/>
                                    <GradientStop Color="#00FFDAAC" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="SelectionBorder" BorderThickness="1"  BorderBrush="#00FF9B35">
                            <Grid>
                                <Rectangle Visibility="Collapsed" x:Name="SelectionBG" >
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFFDAAC" Offset="0"/>
                                            <GradientStop Color="#00FFDAAC" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <ContentPresenter x:Name="contentPresenter" Margin="0" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" TargetName="SelectionBorder" Value="#FFFF9B35"/>

                        </Trigger>
                        <Trigger Property="IsPressed"
    							Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Press}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Release}" />
                            </Trigger.ExitActions>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SensexSurfaceListBoxItemStyle" TargetType="{x:Type Custom:SurfaceListBoxItem}">
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalContentAlignment"
    			Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:SurfaceListBoxItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Press">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="PressedBrush">
                                <EasingColorKeyFrame KeyTime="0" Value="#FFFFDAAC"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#7FFFDAAC"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Release">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBrush">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="PressedBrush">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#00FFDAAC"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid SnapsToDevicePixels="True" >
                        <Grid.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFE9EBEA" Offset="0"/>
                                <GradientStop Color="#FFD5D4DA" Offset="1"/>
                            </LinearGradientBrush>

                        </Grid.Background>
                        <Border x:Name="PressedBrush" BorderBrush="#FFFF9B35" BorderThickness="0,1,0,0" HorizontalAlignment="Stretch" Width="Auto" Visibility="Collapsed" Opacity="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#00FFDAAC" Offset="0"/>
                                    <GradientStop Color="#00FFDAAC" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="SelectionBorder" BorderBrush="#00FF9B35">
                            <Grid>
                                <Rectangle Visibility="Collapsed" x:Name="SelectionBG" >
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFDDF5FF" Offset="0"/>
                                            <GradientStop Color="#FFC5F3FF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <ContentPresenter x:Name="contentPresenter" Margin="3"/>
                            </Grid>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" TargetName="SelectionBorder" Value="#FFFF9B35"/>
                            <Setter Property="Visibility" TargetName="SelectionBG" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
    							Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Press}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Release}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="Tag" Value="MiniThumb">
                            <Setter Property="Margin" Value="0" TargetName="contentPresenter"/>
                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="SensexSurfaceListBoxItemStyle" TargetType="{x:Type Custom:SurfaceListBoxItem}">
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalContentAlignment"
    			Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:SurfaceListBoxItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Press">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="PressedBrush">
                                <EasingColorKeyFrame KeyTime="0" Value="#FFFFDAAC"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#7FFFDAAC"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Release">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBrush">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="PressedBrush">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#00FFDAAC"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid SnapsToDevicePixels="True" >
                        <Grid.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFE9EBEA" Offset="0"/>
                                <GradientStop Color="#FFD5D4DA" Offset="1"/>
                            </LinearGradientBrush>

                        </Grid.Background>
                        <Border x:Name="PressedBrush" BorderBrush="#FFFF9B35" BorderThickness="0,1,0,0" HorizontalAlignment="Stretch" Width="Auto" Visibility="Collapsed" Opacity="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#00FFDAAC" Offset="0"/>
                                    <GradientStop Color="#00FFDAAC" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="SelectionBorder" BorderBrush="#00FF9B35">
                            <Grid>
                                <Rectangle Visibility="Collapsed" x:Name="SelectionBG" >
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFDDF5FF" Offset="0"/>
                                            <GradientStop Color="#FFC5F3FF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <ContentPresenter x:Name="contentPresenter" Margin="3"/>
                            </Grid>
                        </Border>
                        </Grid>
                        <Grid Grid.Row="1" x:Name="RowDetailsTemplateContainer" >
                            <ContentControl Visibility="Collapsed" x:Name="DetailsContent" 
                                            DataContext="{Binding Path=DataContext.SelectedCompanyDetails,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type base:SlateWindow}}}" Content="{Binding}" HorizontalAlignment="Left"/>

                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" TargetName="SelectionBorder" Value="#FFFF9B35"/>
                            <Setter Property="Visibility" TargetName="SelectionBG" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="DetailsContent" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Visibility" Value="Visible" SourceName="DetailsContent">
                            <Setter Property="ContentTemplate" TargetName="DetailsContent" Value="{DynamicResource PotraitStockDetailsTemplate}"/>
                            
                        </Trigger>
                        <Trigger Property="IsPressed"
    							Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Press}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Release}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="Tag" Value="MiniThumb">
                            <Setter Property="Margin" Value="0" TargetName="contentPresenter"/>
                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <Style x:Key="SurfaceListBoxItemStyle" TargetType="{x:Type Custom:SurfaceListBoxItem}">
        <Setter Property="HorizontalContentAlignment"
    			Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:SurfaceListBoxItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Press">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="PressedBrush">
                                <EasingColorKeyFrame KeyTime="0" Value="#FFFFDAAC"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#7FFFDAAC"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Release">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBrush">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="PressedBrush">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#00FFDAAC"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Margin="2" SnapsToDevicePixels="True" >
                        <Border x:Name="PressedBrush" BorderBrush="#FFFF9B35" BorderThickness="0,1,0,0" HorizontalAlignment="Stretch" Width="Auto" Visibility="Collapsed" Opacity="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#00FFDAAC" Offset="0"/>
                                    <GradientStop Color="#00FFDAAC" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="SelectionBorder" BorderThickness="2"  BorderBrush="#00FF9B35">
                            <Grid>
                                <Rectangle Visibility="Collapsed" x:Name="SelectionBG" >
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFFDAAC" Offset="0"/>
                                            <GradientStop Color="#00FFDAAC" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <ContentPresenter x:Name="contentPresenter" Margin="3"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" TargetName="SelectionBorder" Value="#FFFF9B35"/>
                            <Setter Property="Visibility" TargetName="SelectionBG" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
    							Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Press}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Release}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="Tag" Value="MiniThumb">
                            <Setter Property="Margin" Value="0" TargetName="contentPresenter"/>
                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Custom:SurfaceButton}" >
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:SurfaceButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Press">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="PressedBrush">
                                <EasingColorKeyFrame KeyTime="0" Value="#FFFFDAAC"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#7FFFDAAC"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Release">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBrush">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="PressedBrush">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#00FFDAAC"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Grid"  Background="Transparent"
    						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Rectangle  x:Name="ButtonBody"
    							Fill ="Transparent"
    							SnapsToDevicePixels ="{TemplateBinding SnapsToDevicePixels}"/>
                        <Border x:Name="PressedBrush" BorderBrush="#FFFF9B35" BorderThickness="0,1,0,0" HorizontalAlignment="Stretch" Width="Auto" Visibility="Collapsed" Opacity="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#00FFDAAC" Offset="0"/>
                                    <GradientStop Color="#00FFDAAC" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <ContentPresenter  x:Name="Content"  Margin="0,5,0,0"
    							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
    							Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Press}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Release}" />
                            </Trigger.ExitActions>

                        </Trigger>
                        <Trigger Property="IsEnabled"
    							Value="False">
                            <Setter Property="Fill"
    								Value="{DynamicResource {x:Static Custom:SurfaceColors.ButtonBackgroundDisabledBrushKey}}"
    								TargetName="ButtonBody" />
                            <Setter Property="Foreground"
    								Value="{DynamicResource {x:Static Custom:SurfaceColors.ButtonForegroundDisabledBrushKey}}"/>
                            <Setter Property="Opacity"
    								Value="0.33"
    								TargetName="Content" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SurfaceRadioButtonStyle" TargetType="{x:Type Custom:SurfaceRadioButton}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:SurfaceRadioButton}">
                    <Border Height="35" >
                        <Grid SnapsToDevicePixels="True">
                            <Border x:Name="border3" BorderThickness="0,0,1,0" CornerRadius="0" BorderBrush="#FFB8B8B8" SnapsToDevicePixels="True">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFBABCBB" Offset="0"/>
                                        <GradientStop Color="#FFB2B3B5" Offset="1"/>
                                        <GradientStop Color="White" Offset="0.5"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Grid x:Name="grid" Visibility="Collapsed" Margin="-1,0,-1,-1" d:IsHidden="True">
                                    <Border x:Name="border" BorderBrush="#FFC6C6C6" BorderThickness="2" CornerRadius="0" Margin="3"/>
                                    <Border x:Name="border1" BorderBrush="#FFBCBCBC" BorderThickness="2" CornerRadius="0" Margin="2"/>
                                    <Border x:Name="border2" BorderBrush="#FFADADAD" BorderThickness="2" CornerRadius="0" Margin="1"/>
                                </Grid>
                            </Border>
                            <TextBlock TextWrapping="Wrap" Text="{TemplateBinding Content}" VerticalAlignment="Center" d:LayoutOverrides="Width" HorizontalAlignment="Center" FontWeight="Bold" Foreground="#FF3D3D3D" Margin="20,0" FontSize="10.667"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="grid" Value="Visible"/>
                            <Setter Property="Background" TargetName="border3">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFCCCCCC" Offset="0"/>
                                        <GradientStop Color="#FFC8C8C8" Offset="1"/>
                                        <GradientStop Color="#FFD6D6D6" Offset="0.5"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border3">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="DarkGray" Offset="0"/>
                                        <GradientStop Color="#FFA3A4A5" Offset="1"/>
                                        <GradientStop Color="#FFEFEFEF" Offset="0.5"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Tag" Value="right">
                            <Setter Property="CornerRadius" TargetName="border" Value="0,7,0,0"/>
                            <Setter Property="CornerRadius" TargetName="border1" Value="0,7,0,0"/>
                            <Setter Property="CornerRadius" TargetName="border2" Value="0,7,0,0"/>
                            <Setter Property="CornerRadius" TargetName="border3" Value="0,8,0,0"/>
                            <Setter Property="Margin" TargetName="grid" Value="-1,0,0,-1"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="left">
                            <Setter Property="CornerRadius" TargetName="border" Value="7,0,0,0"/>
                            <Setter Property="CornerRadius" TargetName="border1" Value="7,0,0,0"/>
                            <Setter Property="CornerRadius" TargetName="border2" Value="7,0,0,0"/>
                            <Setter Property="CornerRadius" TargetName="border3" Value="8,0,0,0"/>
                            <Setter Property="Margin" TargetName="grid" Value="0,0,-1,-1"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="FirstItem">
                            <Setter Property="CornerRadius" TargetName="border" Value="7,0,0,7"/>
                            <Setter Property="CornerRadius" TargetName="border1" Value="7,0,0,7"/>
                            <Setter Property="CornerRadius" TargetName="border2" Value="7,0,0,7"/>
                            <Setter Property="CornerRadius" TargetName="border3" Value="8,0,0,7"/>
                            <Setter Property="Margin" TargetName="grid" Value="0,0,-1,-1"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="LastItem">
                            <Setter Property="CornerRadius" TargetName="border" Value="0,7,7,0"/>
                            <Setter Property="CornerRadius" TargetName="border1" Value="0,7,7,0"/>
                            <Setter Property="CornerRadius" TargetName="border2" Value="0,7,7,0"/>
                            <Setter Property="CornerRadius" TargetName="border3" Value="0,7,7,0"/>
                            <Setter Property="Margin" TargetName="grid" Value="0,0,-1,-1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CategoriesSurfaceRadioButtonStyle" TargetType="{x:Type Custom:SurfaceRadioButton}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="#F4F4F4"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckBoxStrokeBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:SurfaceRadioButton}">
                    <Grid Background="{DynamicResource LiveTVBackgroundColor}" >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed_bg">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rightline_nrml">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="top_line_normal">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="selected_bg">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="top_line">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rightline">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="black_text">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="red_text">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="white_text">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="pressed_bg" StrokeThickness="0" Opacity="0">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFD8D8D8" Offset="0"/>
                                    <GradientStop Color="#FFBCBCBC" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="rightline_nrml" StrokeThickness="0" Width="1" HorizontalAlignment="Right" Fill="#FFBEBDC3"/>
                        <Rectangle x:Name="top_line_normal" StrokeThickness="0" VerticalAlignment="Top" Height="1" Fill="#FFBEBDC3"/>
                        <Rectangle x:Name="selected_bg" Fill="Black" StrokeThickness="0" Opacity="0"/>
                        <Rectangle x:Name="top_line" StrokeThickness="0" VerticalAlignment="Top" Height="1" Opacity="0" Fill="#FF3D3D3D"/>
                        <Rectangle x:Name="rightline" StrokeThickness="0" Width="1" HorizontalAlignment="Right" Opacity="0" Fill="#FF3D3D3D"/>
                        <TextBlock x:Name="white_text" TextWrapping="Wrap" Text="{TemplateBinding Content}" d:LayoutOverrides="Width, Height" FontFamily="Myriad Pro" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="20,0" Foreground="White" RenderTransformOrigin="0,0" FontWeight="Bold">
							<TextBlock.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform X="0.2" Y="0.3"/>
								</TransformGroup>
							</TextBlock.RenderTransform>
                        </TextBlock>
                        <TextBlock x:Name="black_text" TextWrapping="Wrap" Text="{TemplateBinding Content}" FontFamily="{DynamicResource Segoe360Font}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="20,0" FontWeight="Bold"/>
                        <TextBlock x:Name="red_text" TextWrapping="Wrap" Text="{TemplateBinding Content}" FontFamily="{DynamicResource Segoe360Font}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="20,0" FontWeight="Bold" Foreground="#FFFF4B20" Opacity="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource CheckedRadioButtonFocusStyle}"/>
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SearchSurfaceTextBoxStyle" TargetType="{x:Type Custom:SurfaceTextBox}" >
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:SurfaceTextBox}">
                    <Grid>
                        <Border x:Name="TextBoxBody"	
								Background="{TemplateBinding Background}" 
								SnapsToDevicePixels ="{TemplateBinding SnapsToDevicePixels}">
                            <Grid>
                                <!-- The implementation places the Content into the ScrollViewer. It must be named PART_ContentHost for the control to function -->
                                <TextBlock Visibility="Collapsed" FontSize="{TemplateBinding FontSize}" Opacity=".3"  x:Name="waterMarkText" Text="Search" FontStyle="Italic" VerticalAlignment="Stretch"/>
                                <Custom:SurfaceScrollViewer x:Name="PART_ContentHost"
										Style="{StaticResource SurfaceTextContentStyle}" VerticalAlignment="Stretch" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush"
									Value="{DynamicResource {x:Static Custom:SurfaceColors.TextBoxBorderFocusedBrushKey}}"/>
                            <Setter Property="Background"
									Value="{DynamicResource {x:Static Custom:SurfaceColors.TextBoxBackgroundFocusedBrushKey}}"/>
                            <Setter Property="Foreground"
									Value="{DynamicResource {x:Static Custom:SurfaceColors.TextBoxForegroundFocusedBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
								Value="False">
                            <Setter Property="Background"	
									Value="{DynamicResource {x:Static Custom:SurfaceColors.TextBoxBackgroundDisabledBrushKey}}"/>
                            <Setter Property="Foreground"
									Value="{DynamicResource {x:Static Custom:SurfaceColors.TextBoxForegroundDisabledBrushKey}}"/>
                            <Setter Property="BorderBrush"
									Value="{DynamicResource {x:Static Custom:SurfaceColors.TextBoxBorderDisabledBrushKey}}"/>
                            <Setter Property="Opacity"	
									TargetName="PART_ContentHost"
									Value="0.33"  />
                        </Trigger>

                        <Trigger Property="Text" Value="">
                            <Setter Property="Visibility" Value="Visible" TargetName="waterMarkText"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SearchImageButton" TargetType="{x:Type Custom:SurfaceButton}">
        <Setter Property="Width" Value="26"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Background" Value="{DynamicResource {x:Static Custom:SurfaceColors.ButtonBackgroundBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static Custom:SurfaceColors.ButtonForegroundBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:SurfaceButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Press">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="PressedBrush">
                                <EasingColorKeyFrame KeyTime="0" Value="#FFFFDAAC"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#7FFFDAAC"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Release">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBrush">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="PressedBrush">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#00FFDAAC"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Grid" Background="Transparent"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Border x:Name="PressedBrush" BorderBrush="#FFFF9B35" BorderThickness="0,1,0,0" HorizontalAlignment="Stretch" Width="Auto" Visibility="Collapsed" Opacity="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#00FFDAAC" Offset="0"/>
                                    <GradientStop Color="#00FFDAAC" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Image Margin="3,0" Width="16" Height="16" Source="{Binding Content,RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
								Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Press}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Release}" />
                            </Trigger.ExitActions>
                            <Setter Property="Foreground"
									Value="{DynamicResource {x:Static Custom:SurfaceColors.ButtonForegroundPressedBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
								Value="False">
                            <Setter Property="Foreground"
									Value="{DynamicResource {x:Static Custom:SurfaceColors.ButtonForegroundDisabledBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ContentControl" x:Key="EmbossedTextStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Grid>
                        <TextBlock TextWrapping="Wrap" Text="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" FontSize="14" RenderTransformOrigin="0.5,0.5">
                            <TextBlock.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform X="1" Y="1"/>
                                </TransformGroup>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                        <TextBlock TextWrapping="Wrap" Text="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF666666" FontSize="14"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PotraitSensexSurfaceListBoxItemStyle" TargetType="{x:Type Custom:SurfaceListBoxItem}">
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalContentAlignment"
    			Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:SurfaceListBoxItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Press">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="PressedBrush">
                                <EasingColorKeyFrame KeyTime="0" Value="#FFFFDAAC"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#7FFFDAAC"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Release">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBrush">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="PressedBrush">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#00FFDAAC"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid SnapsToDevicePixels="True" >
                            <Grid.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFE9EBEA" Offset="0"/>
                                    <GradientStop Color="#FFD5D4DA" Offset="1"/>
                                </LinearGradientBrush>
                            </Grid.Background>
                            <Border x:Name="PressedBrush" BorderBrush="#FFFF9B35" BorderThickness="0,1,0,0" HorizontalAlignment="Stretch" Width="Auto" Visibility="Collapsed" Opacity="1">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#00FFDAAC" Offset="0"/>
                                        <GradientStop Color="#00FFDAAC" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border x:Name="SelectionBorder" BorderBrush="#00FF9B35">
                                <Grid>
                                    <Rectangle Visibility="Collapsed" x:Name="SelectionBG" >
                                        <Rectangle.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFDDF5FF" Offset="0"/>
                                                <GradientStop Color="#FFC5F3FF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <ContentPresenter x:Name="contentPresenter" Margin="3"/>
                                </Grid>
                            </Border>
                        </Grid>
                        <Grid Grid.Row="1" x:Name="RowDetailsTemplateContainer" Background="#FFffffff" >
                            <ContentControl Visibility="Collapsed" x:Name="DetailsContent"  Opacity="0"
                                            Content="{Binding}" HorizontalAlignment="Stretch"/>
                            <local:PreLoader x:Name="Preloader" IsBusy="{x:Null}"  Grid.Column="1"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="ShowRowDetails">
                            <Setter Property="Visibility" Value="Visible" TargetName="RowDetailsTemplateContainer"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" TargetName="SelectionBorder" Value="#FFFF9B35"/>
                            <Setter Property="Visibility" TargetName="SelectionBG" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="DetailsContent" Value="Visible"/>
                            <Setter Property="IsBusy" Value="{Binding DataContext.IsScorecardDetailsPaneBusy, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type base:SlateWindow}}}" TargetName="Preloader"/>
                        </Trigger>
                        <Trigger Property="IsBusy" Value="False" SourceName="Preloader" >
                            <Trigger.EnterActions>
                                <BeginStoryboard >
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DetailsContent" Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="00:00:00.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard >
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DetailsContent" Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="00:00:00.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="Visibility" Value="Visible" SourceName="DetailsContent">
                            <Setter Property="DataContext" Value="{Binding Path=DataContext.SelectedCompanyDetails,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type base:SlateWindow}}}" TargetName="DetailsContent"/>
                            <Setter Property="ContentTemplate" TargetName="DetailsContent" Value="{DynamicResource PotraitStockDetailsTemplate}"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
    							Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Press}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Release}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="Tag" Value="MiniThumb">
                            <Setter Property="Margin" Value="0" TargetName="contentPresenter"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CategoryListBoxItemStyle" TargetType="{x:Type Custom:SurfaceListBoxItem}">
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:SurfaceListBoxItem}">
                    <Grid SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="rectangle" Stroke="#FFA5A5A5" Margin="3,0,3,5" Opacity="0">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.46,-0.066" StartPoint="0.46,0.993">
                                    <GradientStop Color="#FFDADADA"/>
                                    <GradientStop Color="White" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Path x:Name="path" Data="M0.5,0.5 L9.5,9.5 0.5,9.5 z" HorizontalAlignment="Center" Height="10" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Stroke="#FFA5A5A5" VerticalAlignment="Bottom" Width="10" Margin="0,0,0,0.458" Fill="#FFDBDBDB" Opacity="0">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="-45"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Path x:Name="path1" Data="M-1.6614395,-1.0471056 L13.263148,-1.0462778 9.6744579,2.6167373 1.8519485,2.3692147 z" Fill="#FFDBDBDB" Height="3.34" Stretch="Fill" VerticalAlignment="Bottom" HorizontalAlignment="Center" Width="14.346" Margin="0,0,0,3.505" Opacity="0" />
                        <TextBlock x:Name="textBlock" Margin="8,5,8,10" TextWrapping="Wrap" Text="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" TargetName="textBlock" Value="{DynamicResource HighlightRedBrush}"/>
                            <Setter Property="Opacity" TargetName="rectangle" Value="1"/>
                            <Setter Property="Opacity" TargetName="path" Value="1"/>
                            <Setter Property="Opacity" TargetName="path1" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="10.667"/>
        <Setter Property="Foreground" Value="#FF0083B4"/>
    </Style>
    <Style x:Key="StockSurfaceListBoxStyle"  TargetType="{x:Type Custom:SurfaceListBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:SurfaceListBox}">
                    <Grid  SnapsToDevicePixels="True" >
                        <Custom:SurfaceScrollViewer Tag="{TemplateBinding Tag}" Opacity="0" 
								HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
								VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
								Focusable="False"
								Width="Auto"
								Height="Auto"
								MinHeight="{TemplateBinding MinHeight}"
								MinWidth="{TemplateBinding MinWidth}"
								x:Name="scrollViewer"
								Elasticity="{TemplateBinding Custom:SurfaceScrollViewer.Elasticity}" >
                            <ItemsPresenter ClipToBounds="False"
									MinHeight="{TemplateBinding MinHeight}"
									MinWidth="{TemplateBinding MinWidth}"/>
                        </Custom:SurfaceScrollViewer>
                        <Border x:Name="Border"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}" />

                        <local:PreLoader x:Name="Preloader" IsBusy="{Binding DataContext.IsScorecardBusy, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type base:SlateWindow}}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsBusy" Value="False" SourceName="Preloader" >
                            <Trigger.EnterActions>
                                <BeginStoryboard >
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="scrollViewer" Storyboard.TargetProperty="Opacity"
                                                        From="0" To="1" Duration="00:00:00.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard >
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="scrollViewer" Storyboard.TargetProperty="Opacity"
                                                        From="1" To="0" Duration="00:00:00"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsGrouping"
								Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll"
									Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Custom:SurfaceRadioButton}" x:Key="ChannelSurfaceRadioButton" BasedOn="{StaticResource CategoriesSurfaceRadioButtonStyle}">
        <Setter Property="Height" Value="30"/>
    </Style>


    <LinearGradientBrush x:Key="HeaderForegroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF8C5552" Offset="0"/>
        <GradientStop Color="#FFBE0B24" Offset="1"/>
    </LinearGradientBrush>
    <Style TargetType="TextBlock" x:Key="SubHeaderStyle">
        <Setter Property="Foreground" Value="{DynamicResource HeaderForegroundBrush}"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}"/>
        <Setter Property="FontWeight" Value="Bold" />
    </Style>
    <!--Styles-->

    <Style x:Key="ThumbnailTitleTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="#b8b9bb" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="ThumbnailTitleStyle">
        <Setter Property="MaxHeight" Value="30"/>
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{DynamicResource BlackFontBrush}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
    </Style>
    <Style x:Key="HeadingTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="25,10,5,5" />
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}" />
        <Setter Property="FontSize" Value="14px" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#ffffff" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style x:Key="AlbumTitleStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}" />
        <Setter Property="FontSize" Value="18px" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#FFDBDBDB" />
        <Setter Property="TextWrapping" Value="Wrap" />

    </Style>
    <Style x:Key="TimeStampStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Foreground" Value="#FFCCCCCC" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style x:Key="DescriptionTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource Segoe360Font}" />
        <Setter Property="FontSize" Value="12px" />
        <Setter Property="Foreground" Value="#b8b9bb" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Thickness x:Key="CarouselAlbumTitleMargin">20,0</Thickness>

    <Style x:Key="SurfaceHyperLinkStyle" TargetType="{x:Type Custom:SurfaceButton}">
        <Setter Property="MinWidth" Value="40"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:SurfaceButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Press">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="PressedBrush">
                                <EasingColorKeyFrame KeyTime="0" Value="#FFFFDAAC"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#7FFFDAAC"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Release">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBrush">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="PressedBrush">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#00FFDAAC"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Grid" Background="Transparent" SnapsToDevicePixels="True">
                        <Border x:Name="PressedBrush" BorderBrush="#FFFF9B35" BorderThickness="1" HorizontalAlignment="Stretch" Width="Auto" Visibility="Collapsed" Opacity="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#00FFDAAC" Offset="0"/>
                                    <GradientStop Color="#00FFDAAC" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <TextBlock  Text="{TemplateBinding Content}" Width="Auto" Style="{DynamicResource ShareLabelStyle}" HorizontalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" FontSize="13.333" TextDecorations="Underline" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Press}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Release}" />
                            </Trigger.ExitActions>

                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static Custom:SurfaceColors.ButtonForegroundDisabledBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Rectangle" x:Key="ModalBG">
        <Setter Property="Fill" Value="#FF000000"/>
        <Setter Property="Opacity" Value="0.85"/>
        <Setter Property="Visibility" Value="Collapsed"/>
    </Style>
    
    <!-- 8th Sep Added by Muru-->

    <Style x:Key="LiveMatchRadioButtonStyle" TargetType="{x:Type Custom:SurfaceRadioButton}">
        <Setter Property="MinHeight" Value="10"/>
        <Setter Property="MinWidth" Value="5"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:SurfaceRadioButton}">
                    <Grid >
                        <Border x:Name="border3" BorderBrush="#FFD1d1d1" BorderThickness="0,0,1,0" CornerRadius="0">
                            <Grid x:Name="grid" Visibility="Collapsed" Margin="-1,0,-1,-1" Opacity="0.5">
                                <Border x:Name="border" BorderBrush="#FFC6C6C6" BorderThickness="1" CornerRadius="0" Margin="3"/>
                                <Border x:Name="border1" BorderBrush="#FFBCBCBC" BorderThickness="1" CornerRadius="0" Margin="2"/>
                                <Border x:Name="border2" BorderBrush="#FFADADAD" BorderThickness="1" CornerRadius="0" Margin="1"/>
                            </Grid>
                        </Border>
                        <TextBlock x:Name="content" TextWrapping="Wrap" Text="{TemplateBinding Content}" VerticalAlignment="Center" d:LayoutOverrides="Width" 
                                       HorizontalAlignment="Center" Foreground="#FF3D3D3D" Margin="5,2" FontSize="9"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="#FF6f0213" TargetName="content"/>
                            <Setter Property="Visibility" TargetName="grid" Value="Visible"/>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border3">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="DarkGray" Offset="0"/>
                                        <GradientStop Color="#FFA3A4A5" Offset="1"/>
                                        <GradientStop Color="#FFEFEFEF" Offset="0.5"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="LiveMatchItemBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="#FFCCCCCC" Offset="0.988"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="LiveMatchBorderBrush" Color="#FFd1d1d1"/>
    <Style x:Key="LiveMatchContainer" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource LiveMatchItemBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource LiveMatchBorderBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment"  Value="Left"/>
        <Setter Property="Margin" Value="100,5,20,0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MaxWidth" Value="215"/>
    </Style>
    <ItemsPanelTemplate x:Key="HorizontalPanelTemplate">
        <VirtualizingStackPanel Orientation="Horizontal"/>
    </ItemsPanelTemplate>


    <Style x:Key="BackButtonStyle" TargetType="{x:Type Custom:SurfaceButton}" BasedOn="{StaticResource ImageSurfaceButton}">
        <Setter Property="Width" Value="18"/>
        <Setter Property="Height" Value="18"/> 
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="5,10"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Content" Value="/Resources/Images/back-button-grey.PNG"/>
       
    </Style>
    <Style x:Key="SearchSurfaceButtonStyle" TargetType="{x:Type Custom:SurfaceButton}">
        <Setter Property="MinWidth" Value="75"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <!--<Setter Property="ContentTemplate" Value="{DynamicResource EmbossedTemplate}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:SurfaceButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Press">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="PressedBrush">
                                <EasingColorKeyFrame KeyTime="0" Value="#FFFFDAAC"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#7FFFDAAC"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Release">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBrush">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="PressedBrush">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#00FFDAAC"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Grid" Background="Transparent" SnapsToDevicePixels="True">
                        <Border BorderBrush="{x:Null}" BorderThickness="1" CornerRadius="4">
                            <Border BorderBrush="#FF175D81" BorderThickness="1" Padding="10,3" CornerRadius="3">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF166893" Offset="0.016"/>
                                        <GradientStop Color="#FF0F5D85" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <ContentPresenter   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </Border>
                        <Border x:Name="PressedBrush" BorderBrush="#FFFF9B35" BorderThickness="1" HorizontalAlignment="Stretch" Width="Auto" Visibility="Collapsed" Opacity="1" CornerRadius="4">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#00FFDAAC" Offset="0"/>
                                    <GradientStop Color="#00FFDAAC" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
								Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Press}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Release}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled"
								Value="False">
                            <Setter Property="Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PreNextSurfaceButton" TargetType="{x:Type Custom:SurfaceButton}">
        <Setter Property="MinWidth" Value="18"/>
        <Setter Property="MinHeight" Value="18"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:SurfaceButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Press">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="PressedBrush">
                                <EasingColorKeyFrame KeyTime="0" Value="#FFFFDAAC"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#7FFFDAAC"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Release">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBrush">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="PressedBrush">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#00FFDAAC"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Grid" Background="Transparent" SnapsToDevicePixels="True">

                        <Border>
                            <Border BorderBrush="#FF175D81" BorderThickness="1" Padding="3">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF166893" Offset="0.016"/>
                                        <GradientStop Color="#FF0F5D85" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Path x:Name="path" Data="M2.5957031,3.042057 L9.0996094,6.7979164 L2.5957031,10.553776 z" Fill="White" Height="8" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Width="6" VerticalAlignment="Center">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Border>
                        </Border>
                        <Border x:Name="PressedBrush" BorderBrush="#FFFF9B35" BorderThickness="1" HorizontalAlignment="Stretch" Width="Auto" Visibility="Collapsed" Opacity="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#00FFDAAC" Offset="0"/>
                                    <GradientStop Color="#00FFDAAC" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content" Value="Previous">
                            <Setter Property="RenderTransform" TargetName="path">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleY="1" ScaleX="-1"/>
                                        <SkewTransform AngleY="0" AngleX="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Press}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Release}" />
                            </Trigger.ExitActions>

                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>